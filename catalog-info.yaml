apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: evergreen
  description: Internal CI System
  tags:
    - ci
  links:
    - url: https://spruce.mongodb.com
      title: Evergreen UI
      icon: dashboard
    - url: https://docs.devprod.prod.corp.mongodb.com/evergreen
      title: Docs on Pine
      icon: dashboard
  annotations:
    backstage.io/techdocs-ref: dir:.
spec:
  owner: group:default/oktagroup_61a3e0b2f29b988eeef4f7b1  # 10gen-evergreen-team okta group
  domain: internal-tools

---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: evergreen-backend
  description: Evergreen backend service
  annotations:
    evergreen/project-id: evergreen
    cloud-query/aws_accounts: "557821124784,058264131563"
    cloud-query/bucket_arns: "arn:aws:s3:::mciuploads,arn:aws:s3:::mci-uploads-storage-audit/mciuploads/mci-uploads-storage-audit/"
  tags:
    - golang
    - ci-cd
  links:
    - url: http://github.com/evergreen-ci/evergreen
      title: evergreen-ci/evergreen
      icon: github
    - url: https://docs.devprod.prod.corp.mongodb.com/evergreen
      title: Docs on Pine
      icon: dashboard
spec:
  type: service
  owner: group:default/oktagroup_61a3e0b2f29b988eeef4f7b1  # 10gen-evergreen-team okta group
  lifecycle: production
  system: evergreen
  domain: internal-tools
  providesApis:
    - evergreen-api-rest
    - evergreen-api-graphql
  dependsOn:
    - component:default/Splunk
    - component:default/Honeycomb
    - component:default/kanopy
    - component:default/sentry

---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: evergreen-api-rest
  description: Retrieve Evergreen Data
spec:
  type: openapi
  lifecycle: production
  owner: group:default/oktagroup_61a3e0b2f29b988eeef4f7b1  # 10gen-evergreen-team okta group
  system: evergreen
  definition:
    $text: https://mciuploads.s3.amazonaws.com/evergreen/latest/swagger.json

---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: evergreen-api-graphql
  description: Internal API for the Evergreen UI to fetch data from the backend
  links:
    - url: https://evergreen.mongodb.com/graphql
      title: GraphQL Playground
      icon: externalLink
    - url: https://docs.devprod.prod.corp.mongodb.com/evergreen
      title: Docs on Pine
      icon: dashboard
spec:
  type: graphql
  lifecycle: experimental
  owner: group:default/oktagroup_63a4baf4355dd783744f0b8d  # 10gen-evergreen-ui okta group
  system: evergreen
  definition:
    $text: https://mciuploads.s3.amazonaws.com/evergreen/latest/merged-schema.graphql

