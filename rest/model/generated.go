// Code generated by rest/model/codegen.go. DO NOT EDIT.

package model

import (
	"github.com/evergreen-ci/evergreen/model/patch"
	"github.com/evergreen-ci/evergreen/model/user"
)

type APIDisplayTask struct {
	Name           *string  `json:"name"`
	ExecutionTasks []string `json:"execution_tasks"`
}
type APIDBUser struct {
	UserID       *string  `json:"user_id"`
	DisplayName  *string  `json:"display_name"`
	OnlyApi      bool     `json:"only_api"`
	Roles        []string `json:"roles"`
	EmailAddress *string  `json:"email_address"`
}

// APIDisplayTaskBuildFromService takes the patch.DisplayTask DB struct and
// returns the REST struct *APIDisplayTask with the corresponding fields populated
func APIDisplayTaskBuildFromService(t patch.DisplayTask) *APIDisplayTask {
	m := APIDisplayTask{}
	m.ExecutionTasks = ArrstringArrstring(t.ExecTasks)
	m.Name = StringStringPtr(t.Name)
	return &m
}

// APIDisplayTaskToService takes the APIDisplayTask REST struct and returns the DB struct
// *patch.DisplayTask with the corresponding fields populated
func APIDisplayTaskToService(m APIDisplayTask) *patch.DisplayTask {
	out := &patch.DisplayTask{}
	out.ExecTasks = ArrstringArrstring(m.ExecutionTasks)
	out.Name = StringPtrString(m.Name)
	return out
}

// APIDBUserBuildFromService takes the user.DBUser DB struct and
// returns the REST struct *APIDBUser with the corresponding fields populated
func APIDBUserBuildFromService(t user.DBUser) *APIDBUser {
	m := APIDBUser{}
	m.DisplayName = StringStringPtr(t.DispName)
	m.Roles = ArrstringArrstring(t.SystemRoles)
	m.UserID = StringStringPtr(t.Id)
	m.OnlyApi = BoolBool(t.OnlyAPI)
	return &m
}

// APIDBUserToService takes the APIDBUser REST struct and returns the DB struct
// *user.DBUser with the corresponding fields populated
func APIDBUserToService(m APIDBUser) *user.DBUser {
	out := &user.DBUser{}
	out.DispName = StringPtrString(m.DisplayName)
	out.Id = StringPtrString(m.UserID)
	out.SystemRoles = ArrstringArrstring(m.Roles)
	out.OnlyAPI = BoolBool(m.OnlyApi)
	return out
}
