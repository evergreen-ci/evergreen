{"_id":"logkeeper_34180d8f0d32142016368840609a149291546c48","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"34180d8f0d32142016368840609a149291546c48","author":"mike o'brien","author_email":"mpobrien005@gmail.com","message":"Merge pull request #13 from tessavitabile/EVG-541\n\nEVG-541 Add script to break up large documents in logkeeper db","status":"created","order":1,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “34180d8f0d32142016368840609a149291546c48” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=34180d8f0d32142016368840609a149291546c48 not found"]}
{"_id":"logkeeper_e3579537e848d14f0c3e5c25ef745fd0f10702d4","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"e3579537e848d14f0c3e5c25ef745fd0f10702d4","author":"Mike O'Brien","author_email":"mpobrien005@gmail.com","message":"EVG-982 run logkeeper tests","status":"created","order":2,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “e3579537e848d14f0c3e5c25ef745fd0f10702d4” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=e3579537e848d14f0c3e5c25ef745fd0f10702d4 not found"]}
{"_id":"logkeeper_3c5a8112efdb98f3710b89d553af602e355aa5c9","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"3c5a8112efdb98f3710b89d553af602e355aa5c9","author":"Shraya Ramani","author_email":"shraya@mongodb.com","message":"EVG-743 add ability to link back to a task","status":"created","order":3,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “3c5a8112efdb98f3710b89d553af602e355aa5c9” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=3c5a8112efdb98f3710b89d553af602e355aa5c9 not found"]}
{"_id":"logkeeper_30d6ecccd1ceb5488617413f22bea01f9eb32f89","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"30d6ecccd1ceb5488617413f22bea01f9eb32f89","author":"Mike O'Brien","author_email":"mpobrien005@gmail.com","message":"EVG-1018 text/plain in Accept header should force raw output","status":"created","order":4,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “30d6ecccd1ceb5488617413f22bea01f9eb32f89” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=30d6ecccd1ceb5488617413f22bea01f9eb32f89 not found"]}
{"_id":"logkeeper_07973f585fceb8b7cc2983cd98434a4bd404bce5","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"07973f585fceb8b7cc2983cd98434a4bd404bce5","author":"Shraya Ramani","author_email":"shraya@mongodb.com","message":"EVG-1019 show all complete logs fix","status":"created","order":5,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “07973f585fceb8b7cc2983cd98434a4bd404bce5” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=07973f585fceb8b7cc2983cd98434a4bd404bce5 not found"]}
{"_id":"logkeeper_5fedd7a632fb76c77dd78b6fd8d1be04f432493d","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"5fedd7a632fb76c77dd78b6fd8d1be04f432493d","author":"Mike O'Brien","author_email":"mpobrien005@gmail.com","message":"EVG-985 hash build_id","status":"created","order":6,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “5fedd7a632fb76c77dd78b6fd8d1be04f432493d” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=5fedd7a632fb76c77dd78b6fd8d1be04f432493d not found"]}
{"_id":"logkeeper_c8b70bfb6ed0223d26dd2cfc2fa473748a67df81","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"c8b70bfb6ed0223d26dd2cfc2fa473748a67df81","author":"Mike O'Brien","author_email":"mpobrien005@gmail.com","message":"EVG-889 don't discard fractional seconds from log message timestamp","status":"created","order":7,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “c8b70bfb6ed0223d26dd2cfc2fa473748a67df81” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=c8b70bfb6ed0223d26dd2cfc2fa473748a67df81 not found"]}
{"_id":"logkeeper_a24a0264b767977c4292681d9376d9b166b05a63","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"a24a0264b767977c4292681d9376d9b166b05a63","author":"Mike O'Brien","author_email":"mpobrien005@gmail.com","message":"fix tests","status":"created","order":8,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “a24a0264b767977c4292681d9376d9b166b05a63” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=a24a0264b767977c4292681d9376d9b166b05a63 not found"]}
{"_id":"logkeeper_e864cf934194c161aa044e4599c8c81cee7b6237","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"0001-01-01T00:00:00.000Z"},"finish_time":{"$date":"0001-01-01T00:00:00.000Z"},"gitspec":"e864cf934194c161aa044e4599c8c81cee7b6237","author":"Sam Kleinman","author_email":"sam@10gen.com","message":"EVG-534: add support for an rsName option to logkeeper","status":"created","order":9,"config":"","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","builds":[],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request","errors":["error fetching project “logkeeper” configuration data at revision “e864cf934194c161aa044e4599c8c81cee7b6237” (remote path=“.docker-test.yaml”): Requested file at https://api.github.com/repos/zakhark/logkeeper/contents/.docker-test.yaml?ref=e864cf934194c161aa044e4599c8c81cee7b6237 not found"]}
{"_id":"logkeeper_edd78c1d581bf757a880777b00685321685a8e67","create_time":{"$date":"2016-10-20T21:58:58.947Z"},"start_time":{"$date":"2016-10-20T22:01:00.194Z"},"finish_time":{"$date":"2017-12-04T21:06:48.822Z"},"gitspec":"edd78c1d581bf757a880777b00685321685a8e67","author":"Zakhar Kleyman","author_email":"zakhar.kleyman@mongodb.com","message":"Added .docker-test.yaml for docker testing","status":"success","order":10,"config":"identifier: logkeeper\ncommand_type: system\npost:\n- command: gotest.parse_files\n  params:\n    files:\n    - src/*.suite\nbuildvariants:\n- name: ubuntu\n  display_name: Ubuntu\n  expansions:\n    mongo_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.2.6.tgz\n  run_on:\n  - docker\n  tasks:\n  - name: test\ntasks:\n- name: test\n  commands:\n  - command: git.get_project\n    params:\n      directory: src\n  - command: git.apply_patch\n    params:\n      directory: src\n  - command: shell.exec\n    params:\n      script: |\n        set -o errexit\n        mkdir mongodb\n        cd mongodb\n        curl ${mongo_url} -o mongodb.tgz\n        tar xvf mongodb.tgz\n        chmod +x ./mongodb-*/bin/*\n        mv ./mongodb-*/bin/* .\n        mkdir -p db_files\n  - command: shell.exec\n    params:\n      background: true\n      script: |\n        ./mongod --dbpath ./db_files \u0026\n      working_dir: mongodb\n  - command: shell.exec\n    params:\n      script: \"cd mongodb \\n./mongo --nodb --eval 'assert.soon(function(x){try{var\n        d = new Mongo(\\\"localhost:27017\\\"); return true}catch(e){return false}}, \\\"timed\n        out connecting\\\")'\\n\"\n      working_dir: mongodb\n  - command: shell.exec\n    params:\n      script: |\n        . ./set_gopath.sh\n        set -e\n        go test -v \u003e logkeeper.suite\n      type: test\n      working_dir: src\n","ignored":false,"owner_name":"zakhark","repo_name":"logkeeper","branch_name":"docker-test","repo_kind":"github","build_variants_status":[{"build_variant":"ubuntu","activated":true,"activate_at":{"$date":"2016-10-20T21:59:00.366Z"},"build_id":"logkeeper_ubuntu_edd78c1d581bf757a880777b00685321685a8e67_16_10_20_21_58_58"}],"builds":["logkeeper_ubuntu_edd78c1d581bf757a880777b00685321685a8e67_16_10_20_21_58_58"],"identifier":"logkeeper","remote":false,"remote_path":".docker-test.yaml","r":"gitter_request"}
{
	"_id" : "sys_perf_40dc86136f85f88e1782a1c65b49bfba02757009",
	"create_time" : ISODate("2017-12-05T17:20:27.852Z"),
	"start_time" : ISODate("2017-12-05T20:16:15.335Z"),
	"finish_time" : ISODate("0001-01-01T00:00:00Z"),
	"gitspec" : "40dc86136f85f88e1782a1c65b49bfba02757009",
	"author" : "Pavithra Vetriselvan",
	"author_email" : "pavithra.vetriselvan@mongodb.com",
	"message" : "SERVER-29844 Prefers a priority takeover if the current node has highest priority  and it is most up to date",
	"status" : "started",
	"order" : 1,
	"config" : "identifier: sys-perf\ncommand_type: system\npost:\n- command: shell.exec\n  params:\n    script: |\n      source ./dsienv.sh\n      make_artifact.sh\n    working_dir: work\n- command: s3.put\n  params:\n    aws_key: ${aws_key}\n    aws_secret: ${aws_secret}\n    bucket: mciuploads\n    content_type: ${content_type|application/x-gzip}\n    display_name: test-log - Execution ${execution}\n    local_file: work/reports.tgz\n    permissions: public-read\n    remote_file: ${project}/${build_variant}/${revision}/${task_id}/${version_id}/logs/${task_name}-${build_id}-${execution}.${ext|tgz}\n- command: s3.put\n  params:\n    aws_key: ${aws_key}\n    aws_secret: ${aws_secret}\n    bucket: mciuploads\n    content_type: text/html\n    display_name: workloads documentation\n    local_file: src/workloads/workloads/jsdoc/jsdocs-redirect.html\n    permissions: public-read\n    remote_file: ${project}/${build_variant}/${revision}/${task_id}/${version_id}/logs/workloads-${task_name}-${build_id}.html\n- command: attach.results\n  params:\n    file_location: work/report.json\n- command: json.send\n  params:\n    file: work/perf.json\n    name: perf\n- command: shell.exec\n  params:\n    script: |\n      source ./dsienv.sh\n      if [ -e /data/infrastructure_provisioning/terraform/provisioned.${cluster} ]; then\n        mark_idle.sh\n      fi\n    working_dir: work\n- command: shell.exec\n  params:\n    script: |\n      # removes files from the (local) scons cache when it's over a\n      # threshold, to the $prune_ratio percentage. Ideally override\n      # these default values in the distro config in evergreen.\n\n      if [ -d \"${scons_cache_path}\" ]; then\n          ${python|/opt/mongodbtoolchain/v2/bin/python2} buildscripts/scons_cache_prune.py --cache-dir ${scons_cache_path} --cache-size ${scons_cache_size|200} --prune-ratio ${scons_prune_ratio|0.8}\n      fi\n    working_dir: src\nmodules:\n- name: dsi\n  branch: master\n  repo: git@github.com:10gen/dsi.git\n  prefix: dsi\n- name: workloads\n  branch: master\n  repo: git@github.com:10gen/workloads.git\n  prefix: workloads\nbuildvariants:\n- name: linux-1-node-replSet\n  display_name: Linux 1-Node ReplSet\n  expansions:\n    cluster: single\n    platform: linux\n    project: dsi\n    setup: single-replica\n  modules:\n  - dsi\n  - workloads\n  batchtime: 1440\n  run_on:\n  - rhel70-perf-single\n  tasks:\n  - name: industry_benchmarks_WT\n  - name: core_workloads_WT\n  - name: industry_benchmarks_MMAPv1\n  - name: core_workloads_MMAPv1\n  - name: non_sharded_workloads_WT\n  - name: non_sharded_workloads_MMAPv1\n  - name: agg_query_comparison_bestbuy_WT\n  - name: agg_query_comparison_bestbuy_MMAPv1\n- name: linux-standalone\n  display_name: Linux Standalone\n  expansions:\n    cluster: single\n    compile_flags: -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/v2/bin/gcc\n      CXX=/opt/mongodbtoolchain/v2/bin/g++ OBJCOPY=/opt/mongodbtoolchain/v2/bin/objcopy\n    gorootvars: GOROOT=/opt/go PATH=\"/opt/go/bin:$PATH\"\n    platform: linux\n    project: dsi\n    setup: standalone\n    tooltags: \"\"\n    use_scons_cache: \"true\"\n  modules:\n  - dsi\n  - workloads\n  batchtime: 1440\n  run_on:\n  - rhel70-perf-single\n  tasks:\n  - name: compile\n    distros:\n    - rhel70\n  - name: industry_benchmarks_WT\n  - name: core_workloads_WT\n  - name: industry_benchmarks_MMAPv1\n  - name: core_workloads_MMAPv1\n  - name: non_sharded_workloads_WT\n  - name: non_sharded_workloads_MMAPv1\n  - name: agg_query_comparison_bestbuy_WT\n  - name: agg_query_comparison_bestbuy_MMAPv1\n- name: linux-3-shard\n  display_name: Linux 3-Shard Cluster\n  expansions:\n    cluster: shard\n    platform: linux\n    project: dsi\n    setup: shard\n  modules:\n  - dsi\n  - workloads\n  batchtime: 10080\n  run_on:\n  - rhel70-perf-shard\n  tasks:\n  - name: industry_benchmarks_WT\n  - name: core_workloads_WT\n  - name: industry_benchmarks_MMAPv1\n  - name: industry_benchmarks_wmajority_WT\n  - name: industry_benchmarks_wmajority_MMAPv1\n  - name: core_workloads_MMAPv1\n  - name: mongos_workloads_WT\n  - name: mongos_workloads_MMAPv1\n  - name: move_chunk_workloads_WT\n  - name: move_chunk_workloads_MMAPv1\n  - name: agg_query_comparison_bestbuy_WT\n  - name: agg_query_comparison_bestbuy_MMAPv1\n- name: linux-3-node-replSet\n  display_name: Linux 3-Node ReplSet\n  expansions:\n    cluster: replica\n    platform: linux\n    project: dsi\n    setup: replica\n  modules:\n  - dsi\n  - workloads\n  batchtime: 1440\n  run_on:\n  - rhel70-perf-replset\n  tasks:\n  - name: industry_benchmarks_WT\n  - name: core_workloads_WT\n  - name: industry_benchmarks_MMAPv1\n  - name: industry_benchmarks_wmajority_WT\n  - name: industry_benchmarks_wmajority_MMAPv1\n  - name: core_workloads_MMAPv1\n  - name: secondary_performance_WT\n  - name: secondary_performance_MMAPv1\n  - name: non_sharded_workloads_WT\n  - name: non_sharded_workloads_MMAPv1\n  - name: agg_query_comparison_bestbuy_WT\n  - name: agg_query_comparison_bestbuy_MMAPv1\n- name: linux-3-node-replSet-initialsync\n  display_name: Linux 3-Node ReplSet Initial Sync\n  expansions:\n    cluster: replica\n    platform: linux\n    project: dsi\n    setup: replica-2node\n  modules:\n  - dsi\n  - workloads\n  batchtime: 1440\n  run_on:\n  - rhel70-perf-replset\n  tasks:\n  - name: initialsync_WT\n  - name: initialsync_MMAPv1\n- name: linux-replSet-initialsync-logkeeper\n  display_name: Linux ReplSet Initial Sync LogKeeper\n  expansions:\n    cluster: initialsync-logkeeper\n    platform: linux\n    project: dsi\n    setup: initialsync-logkeeper\n  modules:\n  - dsi\n  - workloads\n  batchtime: 10080\n  run_on:\n  - rhel70-perf-initialsync-logkeeper\n  tasks:\n  - name: initialsync-logkeeper_WT\nfunctions:\n  analyze:\n  - command: json.get_history\n    params:\n      file: work/history.json\n      name: perf\n      task: ${task_name}\n  - command: json.get_history\n    params:\n      file: work/tags.json\n      name: perf\n      tags: true\n      task: ${task_name}\n  - type: test\n    command: shell.exec\n    params:\n      script: |\n        set -o errexit\n        TAGS=\"3.4.9-Baseline 3.2.17-Baseline\"\n        OVERRIDEFILE=\"../src/dsi/dsi/analysis/${branch_name}/system_perf_override.json\"\n        python -u ../src/dsi/dsi/analysis/dashboard_gen.py --rev ${revision} -f history.json -t tags.json --refTag $TAGS --overrideFile $OVERRIDEFILE --project_id sys-perf --variant ${build_variant} --task ${task_name} --jira-user ${perf_jira_user} --jira-password ${perf_jira_pw} || true\n      silent: true\n      working_dir: work\n  - command: json.send\n    params:\n      file: work/dashboard.json\n      name: dashboard\n  - type: test\n    command: shell.exec\n    params:\n      script: |\n        set -o errexit\n        set -o verbose\n        TAG=\"3.4.9-Baseline\"\n        OVERRIDEFILE=\"../src/dsi/dsi/analysis/${branch_name}/system_perf_override.json\"\n        python -u ../src/dsi/dsi/analysis/post_run_check.py ${script_flags} --reports-analysis reports --perf-file reports/perf.json --rev ${revision} -f history.json -t tags.json --refTag $TAG --overrideFile $OVERRIDEFILE --project_id sys-perf --variant ${build_variant} --task ${task_name}\n      working_dir: work\n  deploy cluster:\n  - command: shell.exec\n    params:\n      script: |\n        set -e\n        set -v\n        source ./dsienv.sh\n        source ./venv/bin/activate\n        infrastructure_provisioning.py\n        mongodb_setup.py\n      working_dir: work\n  make test log artifact:\n  - command: shell.exec\n    params:\n      script: |\n        source ./dsienv.sh\n        make_artifact.sh\n      working_dir: work\n  prepare environment:\n  - command: shell.exec\n    params:\n      script: |\n        rm -rf ./*\n        mkdir src\n        mkdir work\n  - command: manifest.load\n  - command: git.get_project\n    params:\n      directory: src\n      revisions:\n        dsi: ${dsi_rev}\n        workloads: ${workloads_rev}\n  - command: shell.exec\n    params:\n      script: |\n        cat > bootstrap.yml <<EOF\n        cluster_type: ${cluster}\n        platform: ${platform}\n        setup: ${setup}\n        storageEngine: ${storageEngine}\n        test: ${test}\n        production: true\n        mongodb_binary_archive: \"https://s3.amazonaws.com/mciuploads/${project}/${version_id}/${revision}/${platform}/mongod-${version_id}.tar.gz\"\n        EOF\n\n        cat > runtime.yml <<EOF\n        # evergreen default expansions\n        is_patch: ${is_patch}\n        task_id: ${task_id}\n        task_name: ${task_name}\n        execution: ${execution}\n        build_id: ${build_id}\n        build_variant: ${build_variant}\n        version_id: ${version_id}\n        workdir: ${workdir}\n        revision: ${revision}\n        project: ${project}\n        branch_name: ${branch_name}\n\n        # sys-perf expansions\n        # Shouldn't be needed: testList: ${testList}\n        ext: ${ext}\n        script_flags : ${script_flags}\n        dsi_rev: ${dsi_rev}\n        workloads_rev: ${workloads_rev}\n        EOF\n      working_dir: work\n  - command: shell.exec\n    params:\n      script: |\n        # AWS ssh secret key\n        echo \"${ec2_pem}\" > aws_ssh_key.pem\n        chmod 400 aws_ssh_key.pem\n\n        cat > runtime_secret.yml <<EOF\n        # Note that inside system_perf.yml we have ${aws_key} & ${aws_secret}, which are used for\n        # Evergreen resources. The below are used for dsi resources, and are NOT the same!\n        aws_access_key: \"${terraform_key}\"\n        aws_secret_key: \"${terraform_secret}\"\n        perf_jira_user: \"${perf_jira_user}\"\n        perf_jira_pw: \"${perf_jira_pw}\"\n        EOF\n        chmod 400 runtime_secret.yml\n      silent: true\n      working_dir: work\n  - command: shell.exec\n    params:\n      script: |\n        set -e\n        virtualenv ./venv\n        source ./venv/bin/activate\n        pip install -r ../src/dsi/dsi/requirements.txt\n        python ../src/dsi/dsi/bin/bootstrap.py\n      working_dir: work\n  - command: shell.exec\n    params:\n      script: |\n        set -v\n        set -e\n        source work/dsienv.sh\n        setup-dsi-env.sh\n        ls -a work\n  run test:\n  - type: test\n    command: shell.exec\n    params:\n      script: |\n        set -e\n        set -v\n        source ./dsienv.sh\n        source ./venv/bin/activate\n        test_control.py\n      working_dir: work\n  - command: json.send\n    params:\n      file: work/perf.json\n      name: perf\ntasks:\n- name: compile\n  commands:\n  - command: manifest.load\n  - command: git.get_project\n    params:\n      directory: src\n  - command: shell.exec\n    params:\n      script: |\n        set -o errexit\n        set -o verbose\n\n        # We get the raw version string (r1.2.3-45-gabcdef) from git\n        MONGO_VERSION=$(git describe)\n        # If this is a patch build, we add the patch version id to the version string so we know\n        # this build was a patch, and which evergreen task it came from\n        if [ \"${is_patch|}\" = \"true\" ]; then\n          MONGO_VERSION=\"$MONGO_VERSION-patch-${version_id}\"\n        fi\n\n        # This script converts the generated version string into a sanitized version string for\n        # use by scons and uploading artifacts as well as information about for the scons cache.\n        MONGO_VERSION=$MONGO_VERSION USE_SCONS_CACHE=${use_scons_cache|false} ${python|/opt/mongodbtoolchain/v2/bin/python2} buildscripts/generate_compile_expansions.py --out compile_expansions.yml\n      working_dir: src\n  - command: expansions.update\n    params:\n      file: src/compile_expansions.yml\n  - command: shell.exec\n    params:\n      script: |\n        set -o verbose\n        set -o errexit\n        # make sure newlines in the scripts are handled correctly by windows\n        if [ \"Windows_NT\" = \"$OS\" ]; then\n          set -o igncr\n        fi;\n        sed -i.bak \"s/built-without-version-string/$(git describe)/\" common/options/options.go\n        sed -i.bak \"s/built-without-git-spec/$(git rev-parse HEAD)/\" common/options/options.go\n        . ./${set_tools_gopath|set_gopath.sh}\n        build_tools=\"bsondump mongostat mongofiles mongoexport mongoimport mongorestore mongodump mongotop\"\n        if [ \"${build_mongoreplay}\" = \"true\" ]; then\n          build_tools=\"$build_tools mongoreplay\"\n        fi\n        for i in $build_tools; do\n          ${gorootvars} go build ${tooltags|} -o \"../../mongo-tools/$i${exe|}\" $i/main/$i.go\n          \"../../mongo-tools/$i${exe|}\" --version\n        done\n      working_dir: src/src/mongo/gotools\n  - command: shell.exec\n    params:\n      script: |\n        set -o errexit\n        set -o verbose\n        ${python|/opt/mongodbtoolchain/v2/bin/python2} ./buildscripts/scons.py ${compile_flags|} ${scons_cache_args|} mongo${extension} --use-new-tools mongod${extension} mongos${extension} MONGO_VERSION=${version}\n        mkdir -p mongodb/bin\n        mkdir -p mongodb/jstests/hooks\n        mv mongo${extension|} mongodb/bin\n        mv mongod${extension|} mongodb/bin\n        mv mongos${extension|} mongodb/bin\n        mv src/mongo-tools/* mongodb/bin\n        if [ -d jstests/hooks ]\n        then\n          echo \"Fetching JS test DB correctness checks from directory jstests\"\n          cp -a jstests/* mongodb/jstests\n        fi\n        tar cvf mongodb.tar mongodb\n        gzip mongodb.tar\n      working_dir: src\n  - command: s3.put\n    params:\n      aws_key: ${aws_key}\n      aws_secret: ${aws_secret}\n      bucket: mciuploads\n      content_type: ${content_type|application/x-gzip}\n      display_name: mongodb.tar.gz\n      local_file: src/mongodb.tar.gz\n      permissions: public-read\n      remote_file: ${project}/${version_id}/${revision}/${platform}/mongod-${version_id}.tar.gz\n- name: industry_benchmarks_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: ycsb\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: industry_benchmarks_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: ycsb\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n    vars:\n      script_flags: --ycsb-throughput-analysis reports\n- name: industry_benchmarks_wmajority_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: ycsb-wmajority\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n    vars:\n      script_flags: --ycsb-throughput-analysis reports\n- name: industry_benchmarks_wmajority_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: ycsb-wmajority\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n    vars:\n      script_flags: --ycsb-throughput-analysis reports\n- name: core_workloads_WT\n  exec_timeout_secs: 36000\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: core\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: core_workloads_MMAPv1\n  exec_timeout_secs: 36000\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: core\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: agg_query_comparison_bestbuy_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: agg_query_comparison_bestbuy\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: agg_query_comparison_bestbuy_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: agg_query_comparison_bestbuy\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: non_sharded_workloads_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: non_sharded\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: non_sharded_workloads_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: non_sharded\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: mongos_workloads_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: mongos\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: mongos_workloads_MMAPv1\n  exec_timeout_secs: 32400\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: mongos\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: move_chunk_workloads_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: move_chunk\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: move_chunk_workloads_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: move_chunk\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: secondary_performance_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      setup: replica-2node\n      storageEngine: wiredTiger\n      test: secondary_performance\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: secondary_performance_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      setup: replica-2node\n      storageEngine: mmapv1\n      test: secondary_performance\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: initialsync_WT\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: initialsync\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: initialsync_MMAPv1\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: mmapv1\n      test: initialsync\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n- name: initialsync-logkeeper_WT\n  exec_timeout_secs: 216000\n  depends_on:\n  - name: compile\n    variant: linux-standalone\n  commands:\n  - func: prepare environment\n    vars:\n      storageEngine: wiredTiger\n      test: initialsync-logkeeper\n  - func: deploy cluster\n  - func: run test\n  - func: make test log artifact\n  - func: analyze\n",
	"ignored" : false,
	"owner_name" : "mongodb",
	"repo_name" : "mongo",
	"branch_name" : "master",
	"repo_kind" : "github",
	"build_variants_status" : [
		{
			"build_variant" : "linux-1-node-replSet",
			"activated" : true,
			"activate_at" : ISODate("2017-12-05T17:26:35.878Z"),
			"build_id" : "sys_perf_linux_1_node_replSet_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
		},
		{
			"build_variant" : "linux-standalone",
			"activated" : true,
			"activate_at" : ISODate("2017-12-05T17:26:35.878Z"),
			"build_id" : "sys_perf_linux_standalone_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
		},
		{
			"build_variant" : "linux-3-shard",
			"activated" : false,
			"activate_at" : ISODate("2017-12-11T02:35:28.968Z"),
			"build_id" : "sys_perf_linux_3_shard_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
		},
		{
			"build_variant" : "linux-3-node-replSet",
			"activated" : true,
			"activate_at" : ISODate("2017-12-05T17:26:35.878Z"),
			"build_id" : "sys_perf_linux_3_node_replSet_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
		},
		{
			"build_variant" : "linux-3-node-replSet-initialsync",
			"activated" : true,
			"activate_at" : ISODate("2017-12-05T17:26:35.878Z"),
			"build_id" : "sys_perf_linux_3_node_replSet_initialsync_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
		},
		{
			"build_variant" : "linux-replSet-initialsync-logkeeper",
			"activated" : false,
			"activate_at" : ISODate("2017-12-06T13:54:46.001Z"),
			"build_id" : "sys_perf_linux_replSet_initialsync_logkeeper_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
		}
	],
	"builds" : [
		"sys_perf_linux_1_node_replSet_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27",
		"sys_perf_linux_standalone_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27",
		"sys_perf_linux_3_shard_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27",
		"sys_perf_linux_3_node_replSet_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27",
		"sys_perf_linux_3_node_replSet_initialsync_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27",
		"sys_perf_linux_replSet_initialsync_logkeeper_40dc86136f85f88e1782a1c65b49bfba02757009_17_12_05_17_20_27"
	],
	"identifier" : "sys-perf",
	"remote" : false,
	"remote_path" : "etc/system_perf.yml",
	"r" : "gitter_request"
}
