command_type: test
stepback: true
ignore:
    - "*.md" # don't schedule tests if a commit only changes markdown files
    - "scripts/*" # our scripts are untested, so don't schedule tests for them
    - ".github/*" # github CODEOWNERS configuration

post:
  - func: attach-test-results
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/evergreen/bin/output.*.coverage.html"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/evergreen/bin/output.*.coverage"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"


#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - func: get-project
      - func: run-make
        vars: { target: "${task_name}" }
      - command: s3.put
        type: system
        params:
          optional: true
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/evergreen/bin/${task_name}.tar.gz
          remote_file: evergreen/${build_id}-${build_variant}/evergreen-${task_name}-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz
  - &run-go-test-suite
    # runs a make target and then uploads gotest output to
    # evergreen. The test name should correspond to a make target for
    # that suite
    name: test
    commands:
      - func: get-project
      - func: set-up-credentials
      - func: run-make
        vars: { target: "${task_name}" }
  - &run-go-test-suite-with-mongodb
    # runs a make target above, but only on systems that have a
    # running mongod started for testing.
    name: test
    commands:
      - func: get-project
      - func: set-up-credentials
      - func: set-up-mongodb
      - func: run-make
        vars: { target: "${task_name}" }
  - &run-xc-test-suite
    name: test
    depends_on:
      - name: dist-test
    commands:
      - func: get-dist-test
      - func: set-up-credentials
      - func: run-cross
        vars: { target: "${task_name}" }
  - &run-xc-test-suite-with-mongodb
    name: test
    depends_on:
      - name: dist-test
    commands:
      - func: get-dist-test
      - func: set-up-credentials
      - func: set-up-mongodb
      - func: run-cross
        vars: { target: "${task_name}" }
  - &run-smoke-test
    name: smoke
    commands:
      - func: get-project
      - func: set-up-mongodb
      - func: run-make
        vars: { target: "set-var" }
      - func: run-make
        vars: { target: "set-project-var" }
      - func: run-make
        vars: { target: "load-smoke-data" }
      - command: subprocess.exec
        params:
          silent: true
          working_dir: gopath/src/github.com/evergreen-ci/evergreen
          command: bash scripts/setup-smoke-config.sh ${github_token}
      - func: run-make
        vars:
          target: set-smoke-vars
      - func: run-make
        vars:
          target: "${task_name}"
  - &version-constants
    nodejs_version: "6.11.1"
  - &run-generate-lint
    name: generate-lint
    commands:
      - func: get-project
      - func: run-make
        vars: { target: "${task_name}" }
      - command: s3.put
        type: system
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/evergreen/bin/generate-lint.json
          remote_file: evergreen/${build_id}-${build_variant}/bin/generate-lint.json
          bucket: mciuploads
          content_type: application/json
          permissions: public-read
          display_name: generate-lint.json
      - command: generate.tasks
        params:
          files:
            - gopath/src/github.com/evergreen-ci/evergreen/bin/generate-lint.json

#######################################
#              Functions              #
#######################################
functions:
  get-project:
    command: git.get_project
    type: setup
    params:
      directory: gopath/src/github.com/evergreen-ci/evergreen
  run-make:
    command: subprocess.exec
    params:
      working_dir: gopath/src/github.com/evergreen-ci/evergreen
      binary: make
      args: ["${make_args|}", "${target}"]
      env:
        AWS_KEY: ${aws_key}
        AWS_SECRET: ${aws_secret}
        DEBUG_ENABLED: ${debug}
        DISABLE_COVERAGE: ${disable_coverage}
        EVERGREEN_ALL: "true"
        GOARCH: ${goarch}
        GO_BIN_PATH: ${gobin}
        GOOS: ${goos}
        GOPATH: ${workdir}/gopath
        GOROOT: ${goroot}
        KARMA_REPORTER: junit
        RACE_ENABLED: ${race_enabed}
        SETTINGS_OVERRIDE: creds.yml
        TEST_TIMEOUT: ${test_timeout}
  get-dist-test:
    command: s3.get
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: evergreen/${build_id}-${build_variant}/dist-test-${build_id}.tar.gz
      bucket: mciuploads
      local_file: dist-test.tar.gz
  run-cross:
    command: subprocess.exec
    params:
      working_dir: gopath/src/github.com/evergreen-ci/evergreen
      env:
        EVGHOME: ${workdir}/evergreen-test
        SETTINGS_OVERRIDE: ${workdir}/gopath/src/github.com/evergreen-ci/evergreen/creds.yml
      command: make crossTarget=${target} run-cross
  set-up-credentials:
    command: subprocess.exec
    type: setup
    params:
      silent: true
      working_dir: gopath/src/github.com/evergreen-ci/evergreen
      env:
        GITHUB_TOKEN: ${github_token}
        JIRA_SERVER: ${jiraserver}
        CROWD_SERVER: ${crowdserver}
        CROWD_USER: ${crowduser}
        CROWD_PW: ${crowdpw}
        AWS_KEY: ${aws_key}
        AWS_SECRET: ${aws_secret}
      command: bash scripts/setup-credentials.sh
  set-up-mongodb:
    - command: subprocess.exec
      type: setup
      params:
        env:
          MONGODB_URL: ${mongodb_url}
          DECOMPRESS: ${decompress}
        working_dir: gopath/src/github.com/evergreen-ci/evergreen/
        command: make get-mongodb
    - command: subprocess.exec
      type: setup
      params:
        background: true
        working_dir: gopath/src/github.com/evergreen-ci/evergreen/
        command: make start-mongod
    - command: subprocess.exec
      type: setup
      params:
        working_dir: gopath/src/github.com/evergreen-ci/evergreen
        command: make check-mongod
  attach-test-results:
    - command: gotest.parse_files
      type: system
      params:
        files:
          - "gopath/src/github.com/evergreen-ci/evergreen/bin/output.*"
    - command: attach.xunit_results
      type: system
      params:
        files:
          - "gopath/src/github.com/evergreen-ci/evergreen/bin/jstests/*.xml"
  remove-test-results:
    - command: shell.exec
      type: system
      params:
        shell: bash
        script: |
          set -o xtrace
          rm gopath/src/github.com/evergreen-ci/evergreen/bin/output.*
          rm gopath/src/github.com/evergreen-ci/evergreen/bin/jstests/*.xml

#######################################
#                Tasks                #
#######################################

tasks:
  - name: coverage
    tags: [ "report" ]
    commands:
      - func: get-project
      - func: set-up-credentials
      - func: set-up-mongodb
      - func: run-make
        vars:
          target: "coverage-html"
          make_args: "-k"
  - name: dist-test
    commands:
      - func: get-project
      - func: run-make
        vars:
          target: "${task_name}"
      - command: s3.put
        type: system
        params:
          optional: true
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/evergreen/bin/${task_name}.tar.gz
          remote_file: evergreen/${build_id}-${build_variant}/dist-test-${build_id}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist-test-${distro_id}.tar.gz
  - <<: *run-smoke-test
    name: smoke-test-task
    tags: ["smoke"]
  - <<: *run-smoke-test
    name: smoke-test-endpoints
    tags: ["smoke"]
  - <<: *run-generate-lint

  - <<: *run-go-test-suite
    name: js-test
  - <<: *run-build
    name: dist
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-auth
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-rest-route
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-rest-model
  - <<: *run-go-test-suite
    tags: ["nodb", "test", "agent"]
    name: test-rest-client
  - <<: *run-go-test-suite
    tags: ["nodb", "test", "agent"]
    name: test-subprocess
  - <<: *run-go-test-suite-with-mongodb
    tags: ["test", "db", "agent"]
    name: test-command
  - <<: *run-go-test-suite-with-mongodb
    tags: ["test", "db"]
    name: test-units
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test", "agent"]
    name: test-agent
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-rest-data
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test", "cli"]
    name: test-operations
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-db
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-cloud
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-repotracker
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-scheduler
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-service
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-monitor
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-evergreen
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-alerts
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test", "agent"]
    name: test-thirdparty
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-trigger
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test", "agent"]
    name: test-util
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-validator
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-alertrecord
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-artifact
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-build
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-event
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-host
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-notification
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-patch
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-task
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-testresult
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-user
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-distro
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-version
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-migrations

  # race detector tests
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-auth
  - <<: *run-go-test-suite
    tags: ["nodb", "race", "agent"]
    name: race-subprocess
  - <<: *run-go-test-suite-with-mongodb
    tags: ["race", "db", "agent"]
    name: race-command
  - <<: *run-go-test-suite-with-mongodb
    tags: ["race", "db"]
    name: race-units
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-rest-route
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-rest-model
  - <<: *run-go-test-suite
    tags: ["nodb", "race", "agent"]
    name: race-rest-client
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race", "cli"]
    name: race-operations
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race", "agent"]
    name: race-agent
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-db
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-cloud
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-repotracker
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-scheduler
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-service
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-monitor
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-evergreen
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-alerts
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-thirdparty
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race", "agent"]
    name: race-util
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-validator
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-alertrecord
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-artifact
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-host
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-build
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-event
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-notification
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-task
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-version
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-rest-data
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-trigger
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-migrations

  # cross compiled test suites
  - <<: *run-xc-test-suite
    tags: ["nodb", "xc", "agent"]
    name: xc-rest-client
  - <<: *run-xc-test-suite
    tags: ["nodb", "xc", "agent"]
    name: xc-subprocess
  - <<: *run-xc-test-suite-with-mongodb
    tags: ["xc", "agent"]
    name: xc-command
  - <<: *run-xc-test-suite-with-mongodb
    tags: ["db", "xc", "agent"]
    name: xc-agent
  - <<: *run-xc-test-suite-with-mongodb
    tags: ["db", "xc", "cli"]
    name: xc-operations
  - <<: *run-xc-test-suite-with-mongodb
    tags: ["db", "xc", "agent"]
    name: xc-util

buildvariants:
  - name: ubuntu1604
    display_name: Ubuntu 16.04
    run_on:
      - ubuntu1604-test
    expansions:
      gobin: /opt/go1.8/go/bin/go
      disable_coverage: yes
      goroot: /opt/go1.8/go
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-3.6.4.tgz
    tasks:
      - name: "dist"
      - name: ".smoke"
      - name: ".test"
      - name: "js-test"
      - name: generate-lint

  - name: ubuntu1604-debug
    display_name: Ubuntu 16.04 Debug
    run_on:
      - ubuntu1604-test
    expansions:
      debug: 1
      gobin: /opt/go1.8/go/bin/go
      goroot: /opt/go1.8/go
    tasks:
      - name: "dist"
        depends_on:
          - name: "dist"
            variant: "ubuntu1604"

  - name: race-detector
    display_name: Race Detector
    run_on:
      - archlinux-test
    expansions:
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz
      race_enabed: true
      test_timeout: 15m
    tasks:
      - name: "dist"
      - name: ".race"

  - name: coverage
    display_name: Coverage
    run_on:
      - archlinux-test
    expansions:
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz
      test_timeout: 15m
    tasks:
      - name: ".report"
        stepback: false

  - name: osx
    display_name: OSX
    batchtime: 2880
    run_on:
      - macos-1012
    expansions:
      disable_coverage: yes
      gobin: /usr/local/go1.8/go/bin/go
      goroot: /usr/local/go1.8/go
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-3.6.4.tgz
    tasks:
      - name: "dist"
      - name: ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2015-small
    expansions:
      disable_coverage: yes
      gobin: /cygdrive/c/go1.8/go/bin/go
      goroot: c:/go1.8/go
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.6.4.zip
      extension: ".exe"
      archiveExt: ".zip"
    tasks:
      - name: ".nodb .test"
      - name: ".agent .test"
      - name: ".cli .test"

  - name: rhel71-power8
    display_name: RHEL 7.1 POWER8
    batchtime: 2880
    run_on:
      - rhel71-power8-test
    expansions:
      disable_coverage: yes
      goarch: ppc64le
      gobin: /opt/go1.8/go/bin/go
      goos: linux
      goroot: /opt/go1.8/go
      mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-ppc64le-enterprise-rhel71-3.6.4.tgz
    tasks:
      - name: "dist-test"
        distros:
          - ubuntu1604-test
      - name: ".xc"

  - name: rhel72-s390x
    display_name: RHEL 7.2 zLinux
    batchtime: 2880
    run_on:
      - rhel72-zseries-test
    expansions:
      disable_coverage: yes
      goarch: s390x
      gobin: /opt/go1.8/go/bin/go
      goos: linux
      goroot: /opt/go1.8/go
      mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-s390x-enterprise-rhel72-3.5.13.tgz
    tasks:
      - name: "dist-test"
        distros:
          - ubuntu1604-test
      - name: ".xc"

  - name: ubuntu1604-arm64
    display_name: Ubuntu 16.04 ARM
    batchtime: 2880
    run_on:
      - ubuntu1604-arm64-small
    expansions:
      disable_coverage: yes
      goarch: arm64
      goos: linux
      gobin: /opt/go1.8/go/bin/go
      goroot: /opt/go1.8/go
      mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-arm64-enterprise-ubuntu1604-3.5.13.tgz
    tasks:
      - name: "dist-test"
        distros:
          - ubuntu1604-test
      - name: ".xc"
