// Code generated by rest/model/codegen.go. DO NOT EDIT.

package model

func BoolBool(in bool) bool {
	return bool(in)
}

func BoolBoolPtr(in bool) *bool {
	out := bool(in)
	return &out
}

func BoolPtrBool(in *bool) bool {
	var out bool
	if in == nil {
		return out
	}
	return bool(*in)
}

func BoolPtrBoolPtr(in *bool) *bool {
	if in == nil {
		return nil
	}
	out := bool(*in)
	return &out
}

func Float64Float64(in float64) float64 {
	return float64(in)
}

func Float64Float64Ptr(in float64) *float64 {
	out := float64(in)
	return &out
}

func Float64PtrFloat64(in *float64) float64 {
	var out float64
	if in == nil {
		return out
	}
	return float64(*in)
}

func Float64PtrFloat64Ptr(in *float64) *float64 {
	if in == nil {
		return nil
	}
	out := float64(*in)
	return &out
}

func IntInt(in int) int {
	return int(in)
}

func IntIntPtr(in int) *int {
	out := int(in)
	return &out
}

func IntPtrInt(in *int) int {
	var out int
	if in == nil {
		return out
	}
	return int(*in)
}

func IntPtrIntPtr(in *int) *int {
	if in == nil {
		return nil
	}
	out := int(*in)
	return &out
}

func IntRune(in int) rune {
	return rune(in)
}

func IntRunePtr(in int) *rune {
	out := rune(in)
	return &out
}

func IntPtrRune(in *int) rune {
	var out rune
	if in == nil {
		return out
	}
	return rune(*in)
}

func IntPtrRunePtr(in *int) *rune {
	if in == nil {
		return nil
	}
	out := rune(*in)
	return &out
}

func IntUint64(in int) uint64 {
	return uint64(in)
}

func IntUint64Ptr(in int) *uint64 {
	out := uint64(in)
	return &out
}

func IntPtrUint64(in *int) uint64 {
	var out uint64
	if in == nil {
		return out
	}
	return uint64(*in)
}

func IntPtrUint64Ptr(in *int) *uint64 {
	if in == nil {
		return nil
	}
	out := uint64(*in)
	return &out
}

func RuneInt(in rune) int {
	return int(in)
}

func RuneIntPtr(in rune) *int {
	out := int(in)
	return &out
}

func RunePtrInt(in *rune) int {
	var out int
	if in == nil {
		return out
	}
	return int(*in)
}

func RunePtrIntPtr(in *rune) *int {
	if in == nil {
		return nil
	}
	out := int(*in)
	return &out
}

func StringString(in string) string {
	return string(in)
}

func StringStringPtr(in string) *string {
	out := string(in)
	return &out
}

func StringPtrString(in *string) string {
	var out string
	if in == nil {
		return out
	}
	return string(*in)
}

func StringPtrStringPtr(in *string) *string {
	if in == nil {
		return nil
	}
	out := string(*in)
	return &out
}

func Uint64Int(in uint64) int {
	return int(in)
}

func Uint64IntPtr(in uint64) *int {
	out := int(in)
	return &out
}

func Uint64PtrInt(in *uint64) int {
	var out int
	if in == nil {
		return out
	}
	return int(*in)
}

func Uint64PtrIntPtr(in *uint64) *int {
	if in == nil {
		return nil
	}
	out := int(*in)
	return &out
}
