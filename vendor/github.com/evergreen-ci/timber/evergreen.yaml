stepback: false
ignore:
    - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/timber
      - func: run-make
        vars: { target: "${task_name}" }
      - command: s3.put
        type: system
        params:
          optional: true
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/timber/build/${task_name}.tar.gz
          remote_file: timber/${build_id}-${build_variant}/timber-${task_name}-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz

  - &run-build-with-mongodb
    # runs a make target above, but only on systems that have a
    # running mongod started for testing.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/timber
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/evergreen-ci/timber
      binary: make
      args: ["${target}"]
      include_expansions_in_env: ["DISABLE_COVERAGE", "GOROOT", "RACE_DETECTOR"]
      env:
        GOPATH: ${workdir}/gopath
        AWS_KEY: ${aws_key}
        AWS_SECRET: ${aws_secret}
 
#######################################
#                Tasks                #
#######################################
post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/evergreen-ci/timber/build/output.*"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/timber/build/output.*.coverage.html"]
      remote_file: timber/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/timber/build/output.*.coverage"]
      remote_file: timber/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - name: lint
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/timber
      - func: run-make
        vars: { target: "lint" }

  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/timber
      - func: run-make
        vars:
          target: "coverage-html"

  - <<: *run-build-with-mongodb
    tags: ["test"]
    name: test

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      DISABLE_COVERAGE: true
      GOROOT: /opt/golang/go1.16
      RACE_DETECTOR: true
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
    run_on:
      - archlinux-new-small
    tasks:
      - name: ".test"

  - name: coverage
    display_name: Coverage (Arch Linux)
    expansions:
      GOROOT: /opt/golang/go1.16
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
    run_on:
      - archlinux-new-small
    tasks:
      - name: ".report"

  - name: ubuntu
    display_name: Ubuntu 18.04
    expansions:
      DISABLE_COVERAGE: true
      GOROOT: /opt/golang/go1.16
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
    run_on:
      - ubuntu1804-small
    tasks:
      - name: ".test"

  - name: macos
    display_name: macOS 10.14
    expansions:
      DISABLE_COVERAGE: true
      GOROOT: /opt/golang/go1.16
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.1.tgz
    run_on:
      - macos-1014
    tasks:
      - name: ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2019-small
      - windows-64-vs2019-large
      - windows-64-vs2017-small
      - windows-64-vs2017-large
    expansions:
      DISABLE_COVERAGE: true
      GOROOT: C:/golang/go1.16
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.1.zip
    tasks:
      - name: ".test"
