// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collector.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventMetrics struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Time                 *timestamp.Timestamp  `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Id                   int64                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Counters             *EventMetricsCounters `protobuf:"bytes,4,opt,name=counters,proto3" json:"counters,omitempty"`
	Timers               *EventMetricsTimers   `protobuf:"bytes,5,opt,name=timers,proto3" json:"timers,omitempty"`
	Gauges               *EventMetricsGauges   `protobuf:"bytes,6,opt,name=gauges,proto3" json:"gauges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EventMetrics) Reset()         { *m = EventMetrics{} }
func (m *EventMetrics) String() string { return proto.CompactTextString(m) }
func (*EventMetrics) ProtoMessage()    {}
func (*EventMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{0}
}

func (m *EventMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMetrics.Unmarshal(m, b)
}
func (m *EventMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMetrics.Marshal(b, m, deterministic)
}
func (m *EventMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMetrics.Merge(m, src)
}
func (m *EventMetrics) XXX_Size() int {
	return xxx_messageInfo_EventMetrics.Size(m)
}
func (m *EventMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_EventMetrics proto.InternalMessageInfo

func (m *EventMetrics) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventMetrics) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *EventMetrics) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EventMetrics) GetCounters() *EventMetricsCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *EventMetrics) GetTimers() *EventMetricsTimers {
	if m != nil {
		return m.Timers
	}
	return nil
}

func (m *EventMetrics) GetGauges() *EventMetricsGauges {
	if m != nil {
		return m.Gauges
	}
	return nil
}

type EventMetricsCounters struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Ops                  int64    `protobuf:"varint,2,opt,name=ops,proto3" json:"ops,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Errors               int64    `protobuf:"varint,4,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventMetricsCounters) Reset()         { *m = EventMetricsCounters{} }
func (m *EventMetricsCounters) String() string { return proto.CompactTextString(m) }
func (*EventMetricsCounters) ProtoMessage()    {}
func (*EventMetricsCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{1}
}

func (m *EventMetricsCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMetricsCounters.Unmarshal(m, b)
}
func (m *EventMetricsCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMetricsCounters.Marshal(b, m, deterministic)
}
func (m *EventMetricsCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMetricsCounters.Merge(m, src)
}
func (m *EventMetricsCounters) XXX_Size() int {
	return xxx_messageInfo_EventMetricsCounters.Size(m)
}
func (m *EventMetricsCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMetricsCounters.DiscardUnknown(m)
}

var xxx_messageInfo_EventMetricsCounters proto.InternalMessageInfo

func (m *EventMetricsCounters) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *EventMetricsCounters) GetOps() int64 {
	if m != nil {
		return m.Ops
	}
	return 0
}

func (m *EventMetricsCounters) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *EventMetricsCounters) GetErrors() int64 {
	if m != nil {
		return m.Errors
	}
	return 0
}

type EventMetricsTimers struct {
	Total                *duration.Duration `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Duration             *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EventMetricsTimers) Reset()         { *m = EventMetricsTimers{} }
func (m *EventMetricsTimers) String() string { return proto.CompactTextString(m) }
func (*EventMetricsTimers) ProtoMessage()    {}
func (*EventMetricsTimers) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{2}
}

func (m *EventMetricsTimers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMetricsTimers.Unmarshal(m, b)
}
func (m *EventMetricsTimers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMetricsTimers.Marshal(b, m, deterministic)
}
func (m *EventMetricsTimers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMetricsTimers.Merge(m, src)
}
func (m *EventMetricsTimers) XXX_Size() int {
	return xxx_messageInfo_EventMetricsTimers.Size(m)
}
func (m *EventMetricsTimers) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMetricsTimers.DiscardUnknown(m)
}

var xxx_messageInfo_EventMetricsTimers proto.InternalMessageInfo

func (m *EventMetricsTimers) GetTotal() *duration.Duration {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *EventMetricsTimers) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type EventMetricsGauges struct {
	State                int64    `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Workers              int64    `protobuf:"varint,2,opt,name=workers,proto3" json:"workers,omitempty"`
	Failed               bool     `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventMetricsGauges) Reset()         { *m = EventMetricsGauges{} }
func (m *EventMetricsGauges) String() string { return proto.CompactTextString(m) }
func (*EventMetricsGauges) ProtoMessage()    {}
func (*EventMetricsGauges) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{3}
}

func (m *EventMetricsGauges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMetricsGauges.Unmarshal(m, b)
}
func (m *EventMetricsGauges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMetricsGauges.Marshal(b, m, deterministic)
}
func (m *EventMetricsGauges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMetricsGauges.Merge(m, src)
}
func (m *EventMetricsGauges) XXX_Size() int {
	return xxx_messageInfo_EventMetricsGauges.Size(m)
}
func (m *EventMetricsGauges) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMetricsGauges.DiscardUnknown(m)
}

var xxx_messageInfo_EventMetricsGauges proto.InternalMessageInfo

func (m *EventMetricsGauges) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *EventMetricsGauges) GetWorkers() int64 {
	if m != nil {
		return m.Workers
	}
	return 0
}

func (m *EventMetricsGauges) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func init() {
	proto.RegisterType((*EventMetrics)(nil), "poplar.EventMetrics")
	proto.RegisterType((*EventMetricsCounters)(nil), "poplar.EventMetricsCounters")
	proto.RegisterType((*EventMetricsTimers)(nil), "poplar.EventMetricsTimers")
	proto.RegisterType((*EventMetricsGauges)(nil), "poplar.EventMetricsGauges")
}

func init() { proto.RegisterFile("collector.proto", fileDescriptor_9305884a292fdf82) }

var fileDescriptor_9305884a292fdf82 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x6b, 0x13, 0x41,
	0x14, 0xc7, 0xd9, 0xdd, 0x64, 0x4d, 0x5f, 0x43, 0x5b, 0x1e, 0xb1, 0xac, 0x41, 0x34, 0xe4, 0x94,
	0xd3, 0x06, 0x22, 0x82, 0x7a, 0x10, 0x31, 0x15, 0xf1, 0x20, 0xca, 0xb4, 0x27, 0xf1, 0x32, 0x49,
	0x5e, 0xc3, 0xe2, 0xec, 0xcc, 0x32, 0x33, 0xab, 0x20, 0x1e, 0xbd, 0xfb, 0x2f, 0xcb, 0xfc, 0xd8,
	0xda, 0x9a, 0x44, 0xf0, 0xb4, 0xf3, 0x66, 0x3f, 0xdf, 0xf7, 0xeb, 0x3b, 0x70, 0xba, 0x56, 0x42,
	0xd0, 0xda, 0x2a, 0x5d, 0x36, 0x5a, 0x59, 0x85, 0x79, 0xa3, 0x1a, 0xc1, 0xf5, 0x78, 0x18, 0xbe,
	0xe1, 0x76, 0xfc, 0x78, 0xab, 0xd4, 0x56, 0xd0, 0xdc, 0x47, 0xab, 0xf6, 0x7a, 0x6e, 0xab, 0x9a,
	0x8c, 0xe5, 0x75, 0x13, 0x81, 0x47, 0x7f, 0x03, 0x9b, 0x56, 0x73, 0x5b, 0x29, 0x19, 0xfe, 0x4f,
	0x7f, 0xa6, 0x30, 0x7c, 0xf3, 0x95, 0xa4, 0x7d, 0x4f, 0x56, 0x57, 0x6b, 0x83, 0x08, 0x3d, 0xc9,
	0x6b, 0x2a, 0x92, 0x49, 0x32, 0x3b, 0x62, 0xfe, 0x8c, 0x25, 0xf4, 0x5c, 0xde, 0x22, 0x9d, 0x24,
	0xb3, 0xe3, 0xc5, 0xb8, 0x0c, 0x39, 0xcb, 0x2e, 0x67, 0x79, 0xd5, 0x15, 0x65, 0x9e, 0xc3, 0x13,
	0x48, 0xab, 0x4d, 0x91, 0x4d, 0x92, 0x59, 0xc6, 0xd2, 0x6a, 0x83, 0xcf, 0x60, 0xb0, 0x56, 0xad,
	0xb4, 0xa4, 0x4d, 0xd1, 0xf3, 0x39, 0x1e, 0x96, 0x71, 0x8c, 0xdb, 0xb5, 0x97, 0x91, 0x61, 0x37,
	0x34, 0x2e, 0x20, 0x77, 0x19, 0xb5, 0x29, 0xfa, 0xb1, 0xf6, 0x1e, 0xdd, 0x95, 0x27, 0x58, 0x24,
	0x9d, 0x66, 0xcb, 0xdb, 0x2d, 0x99, 0x22, 0x3f, 0xac, 0x79, 0xeb, 0x09, 0x16, 0xc9, 0xa9, 0x80,
	0xd1, 0xbe, 0x4e, 0xf0, 0x1c, 0x72, 0xd9, 0xd6, 0x2b, 0xd2, 0x7e, 0x1f, 0x19, 0x8b, 0x11, 0x9e,
	0x41, 0xa6, 0x1a, 0xe3, 0x17, 0x92, 0x31, 0x77, 0x74, 0x7b, 0x33, 0xd5, 0x77, 0x8a, 0x53, 0xfb,
	0xb3, 0x53, 0x93, 0xd6, 0x2a, 0x4e, 0x9d, 0xb1, 0x18, 0x4d, 0x7f, 0x00, 0xee, 0xf6, 0x8f, 0x73,
	0xe8, 0x5b, 0x65, 0xb9, 0xf0, 0xa5, 0x8e, 0x17, 0x0f, 0x76, 0xd6, 0x7c, 0x11, 0xad, 0x63, 0x81,
	0xc3, 0xa7, 0x30, 0xe8, 0xdc, 0x8c, 0xd6, 0xfc, 0x43, 0x73, 0x83, 0x4e, 0x3f, 0xdf, 0xad, 0x1e,
	0x36, 0x81, 0x23, 0xe8, 0x1b, 0xcb, 0x2d, 0xc5, 0x41, 0x43, 0x80, 0x05, 0xdc, 0xfb, 0xa6, 0xf4,
	0x17, 0x67, 0x40, 0x98, 0xb5, 0x0b, 0xdd, 0x6c, 0xd7, 0xbc, 0x12, 0x14, 0x7c, 0x1e, 0xb0, 0x18,
	0x2d, 0x7e, 0xa5, 0x30, 0xfa, 0xe8, 0xf7, 0xed, 0x8b, 0x2c, 0xbb, 0x67, 0x8c, 0xaf, 0xe0, 0x74,
	0xa9, 0x89, 0x5b, 0xfa, 0x73, 0x75, 0xbf, 0x73, 0x26, 0xfc, 0xf8, 0xd0, 0xb8, 0xfe, 0xcc, 0xf8,
	0xbc, 0xbb, 0x0e, 0x79, 0x18, 0x99, 0x46, 0x49, 0x43, 0xf8, 0x1c, 0x8e, 0x2e, 0x49, 0x6e, 0x7c,
	0x5e, 0x1c, 0xed, 0x73, 0xf5, 0xa0, 0xf4, 0x25, 0x0c, 0x2f, 0xad, 0x26, 0x5e, 0x7b, 0xda, 0xfc,
	0x9f, 0x7a, 0x96, 0xe0, 0x0b, 0x38, 0x59, 0x0a, 0x65, 0x6e, 0xf5, 0x7e, 0x76, 0x97, 0x7d, 0x77,
	0x71, 0x48, 0xfd, 0x1a, 0x3e, 0x0d, 0x2a, 0xf7, 0x9a, 0x24, 0x17, 0xab, 0xdc, 0x1b, 0xf3, 0xe4,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x28, 0x76, 0x85, 0xdf, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PoplarEventCollectorClient is the client API for PoplarEventCollector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoplarEventCollectorClient interface {
	CreateCollector(ctx context.Context, in *CreateOptions, opts ...grpc.CallOption) (*PoplarResponse, error)
	SendEvent(ctx context.Context, in *EventMetrics, opts ...grpc.CallOption) (*PoplarResponse, error)
	StreamEvents(ctx context.Context, opts ...grpc.CallOption) (PoplarEventCollector_StreamEventsClient, error)
	CloseCollector(ctx context.Context, in *PoplarID, opts ...grpc.CallOption) (*PoplarResponse, error)
}

type poplarEventCollectorClient struct {
	cc *grpc.ClientConn
}

func NewPoplarEventCollectorClient(cc *grpc.ClientConn) PoplarEventCollectorClient {
	return &poplarEventCollectorClient{cc}
}

func (c *poplarEventCollectorClient) CreateCollector(ctx context.Context, in *CreateOptions, opts ...grpc.CallOption) (*PoplarResponse, error) {
	out := new(PoplarResponse)
	err := c.cc.Invoke(ctx, "/poplar.PoplarEventCollector/CreateCollector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poplarEventCollectorClient) SendEvent(ctx context.Context, in *EventMetrics, opts ...grpc.CallOption) (*PoplarResponse, error) {
	out := new(PoplarResponse)
	err := c.cc.Invoke(ctx, "/poplar.PoplarEventCollector/SendEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poplarEventCollectorClient) StreamEvents(ctx context.Context, opts ...grpc.CallOption) (PoplarEventCollector_StreamEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PoplarEventCollector_serviceDesc.Streams[0], "/poplar.PoplarEventCollector/StreamEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &poplarEventCollectorStreamEventsClient{stream}
	return x, nil
}

type PoplarEventCollector_StreamEventsClient interface {
	Send(*EventMetrics) error
	CloseAndRecv() (*PoplarResponse, error)
	grpc.ClientStream
}

type poplarEventCollectorStreamEventsClient struct {
	grpc.ClientStream
}

func (x *poplarEventCollectorStreamEventsClient) Send(m *EventMetrics) error {
	return x.ClientStream.SendMsg(m)
}

func (x *poplarEventCollectorStreamEventsClient) CloseAndRecv() (*PoplarResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PoplarResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *poplarEventCollectorClient) CloseCollector(ctx context.Context, in *PoplarID, opts ...grpc.CallOption) (*PoplarResponse, error) {
	out := new(PoplarResponse)
	err := c.cc.Invoke(ctx, "/poplar.PoplarEventCollector/CloseCollector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoplarEventCollectorServer is the server API for PoplarEventCollector service.
type PoplarEventCollectorServer interface {
	CreateCollector(context.Context, *CreateOptions) (*PoplarResponse, error)
	SendEvent(context.Context, *EventMetrics) (*PoplarResponse, error)
	StreamEvents(PoplarEventCollector_StreamEventsServer) error
	CloseCollector(context.Context, *PoplarID) (*PoplarResponse, error)
}

func RegisterPoplarEventCollectorServer(s *grpc.Server, srv PoplarEventCollectorServer) {
	s.RegisterService(&_PoplarEventCollector_serviceDesc, srv)
}

func _PoplarEventCollector_CreateCollector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoplarEventCollectorServer).CreateCollector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poplar.PoplarEventCollector/CreateCollector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoplarEventCollectorServer).CreateCollector(ctx, req.(*CreateOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _PoplarEventCollector_SendEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoplarEventCollectorServer).SendEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poplar.PoplarEventCollector/SendEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoplarEventCollectorServer).SendEvent(ctx, req.(*EventMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _PoplarEventCollector_StreamEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PoplarEventCollectorServer).StreamEvents(&poplarEventCollectorStreamEventsServer{stream})
}

type PoplarEventCollector_StreamEventsServer interface {
	SendAndClose(*PoplarResponse) error
	Recv() (*EventMetrics, error)
	grpc.ServerStream
}

type poplarEventCollectorStreamEventsServer struct {
	grpc.ServerStream
}

func (x *poplarEventCollectorStreamEventsServer) SendAndClose(m *PoplarResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *poplarEventCollectorStreamEventsServer) Recv() (*EventMetrics, error) {
	m := new(EventMetrics)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PoplarEventCollector_CloseCollector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PoplarID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoplarEventCollectorServer).CloseCollector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poplar.PoplarEventCollector/CloseCollector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoplarEventCollectorServer).CloseCollector(ctx, req.(*PoplarID))
	}
	return interceptor(ctx, in, info, handler)
}

var _PoplarEventCollector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "poplar.PoplarEventCollector",
	HandlerType: (*PoplarEventCollectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCollector",
			Handler:    _PoplarEventCollector_CreateCollector_Handler,
		},
		{
			MethodName: "SendEvent",
			Handler:    _PoplarEventCollector_SendEvent_Handler,
		},
		{
			MethodName: "CloseCollector",
			Handler:    _PoplarEventCollector_CloseCollector_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamEvents",
			Handler:       _PoplarEventCollector_StreamEvents_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "collector.proto",
}
