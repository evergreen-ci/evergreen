stepback: false
ignore:
    - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/poplar
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/evergreen-ci/poplar
      binary: make
      args: ["${make_args|}", "${target}"]
      env:
        GO_BIN_PATH: ${gobin}
        DISABLE_COVERAGE: ${disable_coverage}
        GOROOT: ${goroot}
        GOPATH: ${workdir}/gopath
        USERPROFILE: C:\\Users\\Administrator
        LDAP_USER: ${ldap_user}
        LDAP_PASSWORD: ${ldap_password}
        AWS_ACCESS_KEY_ID: ${aws_key}
        AWS_SECRET_ACCESS_KEY: ${aws_secret}

#######################################
#                Tasks                #
#######################################
post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/evergreen-ci/poplar/build/output.*"
        - "gopath/src/github.com/evergreen-ci/poplar/build/test.out"
        - "gopath/src/github.com/evergreen-ci/poplar/build/race.out"
        - "gopath/src/github.com/evergreen-ci/poplar/build/cover*"
  - command: subprocess.exec
    type: setup
    params:
      command: rm -rf ~/.aws
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_s3_key}
      aws_secret: ${aws_s3_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/poplar/build/output.coverage.html"]
      remote_file: poplar/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_s3_key}
      aws_secret: ${aws_s3_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/poplar/build/output.coverage"]
      remote_file: poplar/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - name: lint
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/poplar
      - func: run-make
        vars: { target: "lint" }

  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/poplar
      - func: run-make
        vars:
          target: "coverage-html"

  - <<: *run-build
    tags: ["test"]
    name: test

  - <<: *run-build
    tags: ["race"]
    name: race

#######################################
#           Buildvariants             #
#######################################
#
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
      goroot: /opt/golang/go1.12
      gobin: /opt/golang/go1.12/bin/go
    run_on:
      - archlinux-test
      - archlinux-build
    tasks:
      - name: ".race"
      - name: ".report"

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    expansions:
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
      goroot: /opt/golang/go1.9
      gobin: /opt/golang/go1.9/bin/go
      disable_coverage: true
    run_on:
      - ubuntu1604-test
      - ubuntu1604-build
    tasks:
      - name: ".test"

  - name: macos
    display_name: macOS 10.14
    expansions:
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.1.tgz
      goroot: /opt/golang/go1.9
      gobin: /opt/golang/go1.9/bin/go
      disable_coverage: true
    run_on:
      - macos-1014
      - macos-1014-i7
    tasks:
      - name: ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2017-test
      - windows-64-vs2017-compile
      - windows-64-vs2015-test
      - windows-64-vs2015-compile
      - windows-64-vs2015-small
      - windows-64-vs2015-large
    expansions:
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.1.zip
      goroot: c:/golang/go1.9
      gobin: /cygdrive/c/golang/go1.9/bin/go
      disable_coverage: true
      extension: ".exe"
      archiveExt: ".zip"
    tasks:
      - name: ".test"
