#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: run-make
        vars: { target: "${task_name}" }
  - &run-go-test-suite
    # runs a make target and then uploads gotest output to
    # evergreen. The test name should correspond to a make target for
    # that suite
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: run-make
        vars: { target: "${task_name}" }
    must_have_test_results: true
    tags: ["test"]
  - &run-go-test-suite-with-mongodb
    # runs a make target above, but only on systems that have a
    # running mongod started for testing.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: set-up-mongodb
      - func: run-make
        vars: { target: "${task_name}" }
    must_have_test_results: true
    tags: ["test"]

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/mongodb/amboy
      binary: make
      args: ["${make_args}", "${target}"]
      include_expansions_in_env: ["DISABLE_COVERAGE", "GO_BIN_PATH", "GOROOT", "RACE_DETECTOR"]
      env:
        AWS_KEY: ${aws_key}
        AWS_SECRET: ${aws_secret}
        GOPATH: ${workdir}/gopath
  set-up-mongodb:
    - command: subprocess.exec
      type: setup
      params:
        command: make get-mongodb
        env:
          MONGODB_URL: ${mongodb_url}
          DECOMPRESS: ${decompress}
        working_dir: gopath/src/github.com/mongodb/amboy
    - command: subprocess.exec
      type: setup
      params:
        command: make start-mongod
        working_dir: gopath/src/github.com/mongodb/amboy
        background: true
    - command: subprocess.exec
      type: setup
      params:
        command: make check-mongod
        working_dir: gopath/src/github.com/mongodb/amboy
    - command: subprocess.exec
      type: setup
      params:
        command: make init-rs
        working_dir: gopath/src/github.com/mongodb/amboy


#######################################
#                Tasks                #
#######################################
tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - <<: *run-build
    name: build

  - <<: *run-go-test-suite
    tags: ["report"]
    name: lint

  # The coverage task is less generic.
  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        type: setup
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: set-up-mongodb
      - func: run-make
        vars:
          target: "coverage-html"
          make_args: "-k"

  # define tasks for all test suites (modules)
  - <<: *run-go-test-suite
    name: test-dependency
  - <<: *run-go-test-suite
    name: test-job
  - <<: *run-go-test-suite
    name: test-registry
  - <<: *run-go-test-suite
    name: test-pool
  - <<: *run-go-test-suite
    name: test-rest
  - <<: *run-go-test-suite
    name: test-logger
  - <<: *run-go-test-suite-with-mongodb
    name: test-queue
  - <<: *run-go-test-suite-with-mongodb
    name: test-management

post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/mongodb/amboy/build/output.*.lint"
        - "gopath/src/github.com/mongodb/amboy/build/output.*.test"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/amboy/build/output.*.coverage.html"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/amboy/build/output.*.coverage"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"


#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
      RACE_DETECTOR: true
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.3.tgz
      test_timeout: 15m
    run_on:
      - archlinux-new-large
    tasks:
      - ".test"

  - name: report
    display_name: Reporting
    run_on:
      - archlinux-new-large
    expansions:
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.3.tgz
      test_timeout: 15m
    tasks:
      - name: ".report"
        stepback: false

  - name: ubuntu
    display_name: Ubuntu 18.04
    run_on:
      - ubuntu1804-large
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1804-4.0.3.tgz
    tasks:
      - build
      - ".test"

  - name: macos
    display_name: macOS 10.14
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.3.tgz
      test_timeout: 15m
    run_on:
      - macos-1014
    tasks:
      - build
      - ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2019-large
      - windows-64-vs2019-small
      - windows-64-vs2017-large
      - windows-64-vs2017-small
    expansions:
      GO_BIN_PATH: /cygdrive/c/golang/go1.16/bin/go
      GOROOT: C:/golang/go1.16
      DISABLE_COVERAGE: true
      test_timeout: 15m
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.3.zip
      extension: ".exe"
      archiveExt: ".zip"
    tasks:
      - build
      - ".test"
