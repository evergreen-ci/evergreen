#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: run-make
        vars: { target: "${task_name}" }
  - &run-go-test-suite
    # runs a make target and then uploads gotest output to
    # evergreen. The test name should correspond to a make target for
    # that suite
    name: test
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: setup-credentials
      - func: run-make
        vars: { target: "${task_name}" }
  - &run-go-test-suite-with-mongodb
    # runs a make target above, but only on systems that have a
    # running mongod started for testing.
    name: test
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: setup-credentials
      - func: set-up-mongodb
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  setup-credentials:
    command: shell.exec
    params:
       silent: true
       script: |
         mkdir ~/.aws

         cat <<EOF > ~/.aws/config
         [default]
         region = us-east-1
         EOF

         cat <<EOF > ~/.aws/credentials
         [default]
         aws_access_key_id = ${aws_key}
         aws_secret_access_key = ${aws_secret}
         EOF
  run-make:
    command: shell.exec
    params:
       script: |
         set -o errexit
         set -o verbose

         # Configure a local go path for this build.
         export GOPATH=`pwd`/gopath

         # on windows we need to turn the slashes the other way
         if [ "Windows_NT" == "$OS" ]; then
            export GOPATH=$(cygpath -m $GOPATH)
         fi

         cd gopath/src/github.com/mongodb/amboy

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env} make ${target}
  set-up-mongodb:
    # TODO replace this configuration with something more robust.
    # Current version is borrowed directly rom the Evergreen self tests.
    - command: shell.exec
      params:
        script: |
          set -o errexit
          set -o verbose

          rm -rf mongodb
          mkdir mongodb
          cd mongodb
          curl ${mongodb_url} -o mongodb${archiveExt|.tgz}

          ${decompress} mongodb${archiveExt|.tgz}
          chmod +x ./mongodb-*/bin/*
          mv ./mongodb-*/bin/* .
          rm -rf db_files
          rm -rf db_logs
          mkdir db_files
          mkdir db_logs
    - command: shell.exec
      params:
        background: true
        script: |
          set -o verbose
          cd mongodb
          echo "starting mongod..."
          ./mongod --dbpath ./db_files &
          echo "waiting for mongod to start up"
    - command: shell.exec
      params:
        script: |
          cd mongodb
          ./mongo${extension|} --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:27017"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."


#######################################
#                Tasks                #
#######################################
tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - <<: *run-build
    tags: ["dist"]
    name: build
  - <<: *run-build
    tags: ["report"]
    name: lint

  # The coverage task is less generic.
  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/amboy
      - func: setup-credentials
      - func: set-up-mongodb
      - func: run-make
        vars:
          target: "coverage-html"
          make_args: "-k"

  # define tasks for all test suites (modules)
  - <<: *run-go-test-suite
    name: test-dependency
    tags: ["test"]
  - <<: *run-go-test-suite
    name: test-job
    tags: ["test"]
  - <<: *run-go-test-suite
    name: test-registry
    tags: ["test"]
  - <<: *run-go-test-suite
    name: test-pool
    tags: ["test"]
  - <<: *run-go-test-suite
    name: test-rest
    tags: ["test"]
  - <<: *run-go-test-suite-with-mongodb
    name: test-queue
    tags: ["test"]
  - <<: *run-go-test-suite-with-mongodb
    name: test-queue-driver
    tags: ["test"]

  # run the suites with the race detector (one variant only)
  - <<: *run-build
    tags: ["race"]
    name: build-race
  - <<: *run-go-test-suite
    name: race-dependency
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-job
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-rest
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-registry
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-pool
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite-with-mongodb
    name: race-queue
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite-with-mongodb
    name: race-queue-driver
    tags: ["race"]
    depends_on:
      - name: build-race


post:
  - command: gotest.parse_files
    params:
      files:
        - "gopath/src/github.com/mongodb/amboy/build/test.*.out"
        - "gopath/src/github.com/mongodb/amboy/build/race.*.out"
        - "gopath/src/github.com/mongodb/amboy/build/output.*"
  - command: shell.exec
    params:
      script: |
        rm -rf amboy
        rm -rf ~/.aws
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/amboy/build/output.*.coverage.html"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/amboy/build/output.*.coverage"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"


#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.2.9.tgz
    run_on:
      - archlinux-test
    tasks:
      - ".race"
      - ".report"

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    run_on:
      - ubuntu1604-test
    expansions:
      build_env: "GOROOT=/opt/go DISABLE_COVERAGE=yes"
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-3.4.7.tgz
    tasks:
      - name: ".dist"
      - name: ".test"

  - name: rhel70
    display_name: RHEL 7.0
    expansions:
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.2.9.tgz
      build_env: "PATH=/opt/go/bin:$PATH"
    run_on:
      - rhel70-small
    tasks:
      - ".dist"
      - ".test"

  - name: macos
    display_name: macOS 10.12
    expansions:
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-3.2.9.tgz
      build_env: "PATH=/usr/local/go/bin:$PATH"
    run_on:
      - macos-1012
    tasks:
      - ".dist"
      - ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2015-small
      - windows-64-vs2013-test
      - windows-64-vs2010-test
    expansions:
      build_env: "GOROOT=c:/go DISABLE_COVERAGE=yes"
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-3.2.9.zip
      extension: ".exe"
      archiveExt: ".zip"
    tasks:
      - ".dist"
      - ".test"
