- name: known type names are valid
  rule: KnownTypeNames
  schema: 0
  query: |2-
          
          query Foo($var: String, $required: [String!]!) {
            user(id: 4) {
              pets { ... on Pet { name }, ...PetFields, ... { name } }
            }
          }
          fragment PetFields on Pet {
            name
          }
          
  errors: []
- name: unknown type names are invalid
  rule: KnownTypeNames
  schema: 0
  query: |2-
          
          query Foo($var: JumbledUpLetters) {
            user(id: 4) {
              name
              pets { ... on Badger { name }, ...PetFields }
            }
          }
          fragment PetFields on Peettt {
            name
          }
          
  errors:
    - message: Unknown type "JumbledUpLetters".
      locations:
        - {line: 2, column: 23}
    - message: Unknown type "Badger".
      locations:
        - {line: 5, column: 25}
    - message: Unknown type "Peettt". Did you mean "Pet"?
      locations:
        - {line: 8, column: 29}
- name: ignores type definitions
  rule: KnownTypeNames
  schema: 0
  query: |2-
          
          type NotInTheSchema {
            field: FooBar
          }
          interface FooBar {
            field: NotInTheSchema
          }
          union U = A | B
          input Blob {
            field: UnknownType
          }
          query Foo($var: NotInTheSchema) {
            user(id: $var) {
              id
            }
          }
          
  errors:
    - message: Unknown type "NotInTheSchema".
      locations:
        - {line: 12, column: 23}
