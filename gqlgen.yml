# .gqlgen.yml example
#
# Refer to https://gqlgen.com/config/
# for detailed .gqlgen.yml documentation.
omit_gqlgen_file_notice: true
schema:
  - graphql/schema/**/*.graphql
exec:
  filename: graphql/generated.go
model:
  filename: graphql/models_gen.go
resolver:
  layout: follow-schema
  dir: graphql
  filename_template: "{name}_resolver.go"
models:
  AdminSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAdminSettings
  AdminSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAdminSettings
  AmboyConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyConfig
  AmboyConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyConfig
  AmboyDBConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyDBConfig
  AmboyDBConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyDBConfig
  AmboyNamedQueueConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyNamedQueueConfig
  AmboyNamedQueueConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyNamedQueueConfig
  AmboyRetryConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyRetryConfig
  AmboyRetryConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAmboyRetryConfig
  Annotation:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskAnnotation
  APIConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIapiConfig
  APIConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIapiConfig
  Arch:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      LINUX_64_BIT: 
        value: github.com/evergreen-ci/evergreen.ArchLinuxAmd64
      LINUX_ARM_64_BIT:
        value: github.com/evergreen-ci/evergreen.ArchLinuxArm64
      LINUX_PPC_64_BIT:
        value: github.com/evergreen-ci/evergreen.ArchLinuxPpc64le
      LINUX_ZSERIES:
        value: github.com/evergreen-ci/evergreen.ArchLinuxS390x
      OSX_64_BIT:
        value: github.com/evergreen-ci/evergreen.ArchDarwinAmd64
      OSX_ARM_64_BIT:
        value: github.com/evergreen-ci/evergreen.ArchDarwinArm64
      WINDOWS_64_BIT:
        value: github.com/evergreen-ci/evergreen.ArchWindowsAmd64
  AuthConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAuthConfig
  AuthConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAuthConfig
  PreferredAuthType:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      OKTA:
        value: github.com/evergreen-ci/evergreen/rest/model.OktaPreferredType
      NAIVE:
        value: github.com/evergreen-ci/evergreen/rest/model.NaivePreferredType
      GITHUB:
        value: github.com/evergreen-ci/evergreen/rest/model.GithubPreferredType
      MULTI:
        value: github.com/evergreen-ci/evergreen/rest/model.MultiPreferredType
      KANOPY:
        value: github.com/evergreen-ci/evergreen/rest/model.KanopyPreferredType
  AuthUser:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAuthUser
  AuthUserInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAuthUser
  AWSAccountRoleMapping:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSAccountRoleMapping
  AWSAccountRoleMappingInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSAccountRoleMapping
  AWSConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSConfig
  AWSConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSConfig
  AWSPodConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSPodConfig
  AWSPodConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSPodConfig
  AWSVPCConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSVPCConfig
  AWSVPCConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAWSVPCConfig
  BannerTheme:
    model: github.com/evergreen-ci/evergreen.BannerTheme
  BetaFeatures:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBetaFeatures
  BetaFeaturesInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBetaFeatures
  BooleanMap:
    model: github.com/evergreen-ci/evergreen/graphql.BooleanMap
  BootstrapMethod:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      LEGACY_SSH: 
        value: github.com/evergreen-ci/evergreen/model/distro.BootstrapMethodLegacySSH
      SSH:
        value: github.com/evergreen-ci/evergreen/model/distro.BootstrapMethodSSH
      USER_DATA:
        value: github.com/evergreen-ci/evergreen/model/distro.BootstrapMethodUserData
  BootstrapSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBootstrapSettings
  BootstrapSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBootstrapSettings
  BucketConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBucketConfig
  BucketsConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBucketsConfig
  BucketsConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBucketsConfig
  BucketConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBucketConfig
  Build:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBuild
  BuildBaronSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBuildBaronSettings
  BuildBaronSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBuildBaronSettings
  BuildVariantTuple:
    model: github.com/evergreen-ci/evergreen/model/task.BuildVariantTuple
  CedarConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APICedarConfig
  CedarConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APICedarConfig
  ChildPatch:
    model: github.com/evergreen-ci/evergreen/rest/model.ChildPatch
  ChildPatchAlias:
    model: github.com/evergreen-ci/evergreen/rest/model.APIChildPatchAlias
  ClientBinary:
    model: github.com/evergreen-ci/evergreen/rest/model.APIClientBinary
  ClientConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIClientConfig
  CloudProviderConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APICloudProviders
  CloudProviderConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APICloudProviders
  CommitQueueParams:
    model: github.com/evergreen-ci/evergreen/rest/model.APICommitQueueParams
  CommitQueueParamsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APICommitQueueParams
  CommunicationMethod:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      LEGACY_SSH: 
        value: github.com/evergreen-ci/evergreen/model/distro.CommunicationMethodLegacySSH
      SSH:
        value: github.com/evergreen-ci/evergreen/model/distro.CommunicationMethodSSH
      RPC:
        value: github.com/evergreen-ci/evergreen/model/distro.CommunicationMethodRPC
  ContainerPool:
    model: github.com/evergreen-ci/evergreen/rest/model.APIContainerPool
  ContainerPoolInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIContainerPool
  ContainerPoolsConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIContainerPoolsConfig
  ContainerPoolsConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIContainerPoolsConfig
  ContainerResources:
    model: github.com/evergreen-ci/evergreen/rest/model.APIContainerResources
  ContainerResourcesInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIContainerResources
  CopyDistroInput:
    model: github.com/evergreen-ci/evergreen/rest/model.CopyDistroOpts
  CopyProjectInput:
    model: github.com/evergreen-ci/evergreen/rest/model.CopyProjectOpts
  CreateProjectInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectRef
  DispatcherSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDispatcherSettings
  DispatcherSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDispatcherSettings
  DispatcherVersion:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      REVISED_WITH_DEPENDENCIES: 
        value: github.com/evergreen-ci/evergreen.DispatcherVersionRevisedWithDependencies
  Distro:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDistro
  DistroInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDistro
  DistroInfo:
    model: github.com/evergreen-ci/evergreen/rest/model.DistroInfo
  DockerConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDockerConfig
  DockerConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDockerConfig
  Duration:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDuration
  EC2Key:
    model: github.com/evergreen-ci/evergreen/rest/model.APIEC2Key
  EC2KeyInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIEC2Key
  ECSConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIECSConfig
  ECSConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIECSConfig
  ECSCapacityProvider:
    model: github.com/evergreen-ci/evergreen/rest/model.APIECSCapacityProvider
  ECSCapacityProviderInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIECSCapacityProvider
  ECSClusterConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIECSClusterConfig
  ECSClusterConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIECSClusterConfig
  ECSArchitecture:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      ECS_ARCH_AMD64:
        value: github.com/evergreen-ci/evergreen.ECSArchAMD64
      ECS_ARCH_ARM64:
        value: github.com/evergreen-ci/evergreen.ECSArchARM64
  ECSOperatingSystem:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      ECSOSLinux:
        value: github.com/evergreen-ci/evergreen.ECSOSLinux
      ECSOSWindows:
        value: github.com/evergreen-ci/evergreen.ECSOSWindows
  ECSWindowsVersion:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      ECS_WINDOWS_SERVER_2016:
        value: github.com/evergreen-ci/evergreen.ECSWindowsServer2016
      ECS_WINDOWS_SERVER_2019:
        value: github.com/evergreen-ci/evergreen.ECSWindowsServer2019
      ECS_WINDOWS_SERVER_2022:
        value: github.com/evergreen-ci/evergreen.ECSWindowsServer2022
  EnvVar:
    model: github.com/evergreen-ci/evergreen/rest/model.APIEnvVar
  EnvVarInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIEnvVar
  Expansion:
    model: github.com/evergreen-ci/evergreen/rest/model.APIExpansion
  ExpansionInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIExpansion
  ExternalLink:
    model: github.com/evergreen-ci/evergreen/rest/model.APIExternalLink
  ExternalLinkInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIExternalLink
  FailingCommand:
    model: github.com/evergreen-ci/evergreen/rest/model.APIFailingCommand
  FeedbackRule:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      WAITS_OVER_THRESH: 
        value: github.com/evergreen-ci/evergreen.HostAllocatorWaitsOverThreshFeedback
      NO_FEEDBACK:
        value: github.com/evergreen-ci/evergreen.HostAllocatorNoFeedback
      DEFAULT:
        value: github.com/evergreen-ci/evergreen.HostAllocatorUseDefaultFeedback
  File:
    model: github.com/evergreen-ci/evergreen/rest/model.APIFile
  FileDiff:
    model: github.com/evergreen-ci/evergreen/rest/model.FileDiff
  FinderSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIFinderSettings
  FinderSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIFinderSettings
  FinderVersion:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      LEGACY: 
        value: github.com/evergreen-ci/evergreen.FinderVersionLegacy
      PARALLEL: 
        value: github.com/evergreen-ci/evergreen.FinderVersionParallel
      PIPELINE: 
        value: github.com/evergreen-ci/evergreen.FinderVersionPipeline
      ALTERNATE: 
        value: github.com/evergreen-ci/evergreen.FinderVersionAlternate
  FWSConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIFWSConfig
  FWSConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIFWSConfig
  GeneralSubscription:
    model: github.com/evergreen-ci/evergreen/rest/model.APISubscription
  GithubAppAuth:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubAppAuth
  GithubAppAuthInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubAppAuth
  GitHubAuthConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubAuthConfig
  GitHubAuthConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubAuthConfig
  GitHubCheckRunConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGitHubCheckRunConfig
  GitHubCheckRunConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGitHubCheckRunConfig
  GithubCheckSubscriber:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubCheckSubscriber
  GitHubDynamicTokenPermissionGroupInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGitHubDynamicTokenPermissionGroup
  GitHubDynamicTokenPermissionGroup:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGitHubDynamicTokenPermissionGroup
  GithubPatch:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubPatch
  GithubProjectConflicts:
    model: github.com/evergreen-ci/evergreen/model.GithubProjectConflicts
  GithubPRSubscriber:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubPRSubscriber
  GithubUser:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubUser
  GithubUserInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGithubUser
  GitTag:
    model: github.com/evergreen-ci/evergreen/rest/model.APIGitTag
  GroupedTaskStatusCount:
    model: github.com/evergreen-ci/evergreen/model/task.GroupedTaskStatusCount
  HomeVolumeSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHomeVolumeSettings
  HomeVolumeSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHomeVolumeSettings
  Host:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHost
  HostAllocatorSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHostAllocatorSettings
  HostAllocatorSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHostAllocatorSettings
  HostAllocatorVersion:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      UTILIZATION: 
        value: github.com/evergreen-ci/evergreen.HostAllocatorUtilization
  HostEventLogData:
    model: github.com/evergreen-ci/evergreen/rest/model.HostAPIEventData
  HostEventLogEntry:
    model: github.com/evergreen-ci/evergreen/rest/model.HostAPIEventLogEntry
  HostEventType:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      HOST_CREATED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostCreated
      HOST_CREATED_ERROR:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostCreatedError
      HOST_STARTED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostStarted
      HOST_STOPPED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostStopped
      HOST_MODIFIED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostModified
      HOST_AGENT_DEPLOYED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostAgentDeployed
      HOST_AGENT_DEPLOY_FAILED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostAgentDeployFailed
      HOST_AGENT_MONITOR_DEPLOYED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostAgentMonitorDeployed
      HOST_AGENT_MONITOR_DEPLOY_FAILED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostAgentMonitorDeployFailed
      HOST_JASPER_RESTARTING:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostJasperRestarting
      HOST_JASPER_RESTARTED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostJasperRestarted
      HOST_JASPER_RESTART_ERROR:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostJasperRestartError
      HOST_CONVERTING_PROVISIONING:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostConvertingProvisioning
      HOST_CONVERTED_PROVISIONING:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostConvertedProvisioning
      HOST_CONVERTING_PROVISIONING_ERROR:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostConvertingProvisioningError
      HOST_STATUS_CHANGED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostStatusChanged
      HOST_DNS_NAME_SET:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostDNSNameSet
      HOST_PROVISION_ERROR:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostProvisionError
      HOST_PROVISION_FAILED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostProvisionFailed
      HOST_PROVISIONED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostProvisioned
      HOST_RUNNING_TASK_SET:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostRunningTaskSet
      HOST_RUNNING_TASK_CLEARED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostRunningTaskCleared
      HOST_TASK_FINISHED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostTaskFinished
      HOST_TERMINATED_EXTERNALLY:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostTerminatedExternally
      HOST_EXPIRATION_WARNING_SENT:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostExpirationWarningSent
      HOST_TEMPORARY_EXEMPTION_EXPIRATION_WARNING_SENT:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostTemporaryExemptionExpirationWarningSent
      SPAWN_HOST_CREATED_ERROR:
        value: github.com/evergreen-ci/evergreen/model/event.EventSpawnHostCreatedError
      HOST_IDLE_NOTIFICATION:
        value: github.com/evergreen-ci/evergreen/model/event.EventSpawnHostIdleNotification
      HOST_ALERTABLE_INSTANCE_TYPE_WARNING_SENT:
        value: github.com/evergreen-ci/evergreen/model/event.EventAlertableInstanceTypeWarningSent
      HOST_SCRIPT_EXECUTED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostScriptExecuted
      HOST_SCRIPT_EXECUTE_FAILED:
        value: github.com/evergreen-ci/evergreen/model/event.EventHostScriptExecuteFailed
      VOLUME_EXPIRATION_WARNING_SENT:
        value: github.com/evergreen-ci/evergreen/model/event.EventVolumeExpirationWarningSent
      VOLUME_MIGRATION_FAILED:
        value: github.com/evergreen-ci/evergreen/model/event.EventVolumeMigrationFailed
  HostInitConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHostInitConfig
  HostInitConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHostInitConfig
  HostJasperConfig: 
    model: github.com/evergreen-ci/evergreen/rest/model.APIHostJasperConfig
  HostJasperConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIHostJasperConfig
  IceCreamSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIIceCreamSettings
  IceCreamSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIIceCreamSettings
  CostData:
    model: github.com/evergreen-ci/evergreen/rest/model.APICostData
  CostDataInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APICostData
  Image:
    model: github.com/evergreen-ci/evergreen/rest/model.APIImage
  ImageEvent:
    model: github.com/evergreen-ci/evergreen/rest/model.APIImageEvent
  ImageEventEntry:
    model: github.com/evergreen-ci/evergreen/rest/model.APIImageEventEntry
  ImageEventEntryAction:
    model: github.com/evergreen-ci/evergreen/thirdparty.ImageEventEntryAction
  ImageEventType:
    model: github.com/evergreen-ci/evergreen/thirdparty.ImageEventType
  InstanceTag:
    model: github.com/evergreen-ci/evergreen/model/host.Tag
  InstanceTagInput:
    model: github.com/evergreen-ci/evergreen/model/host.Tag
  IssueLink:
    model: github.com/evergreen-ci/evergreen/rest/model.APIIssueLink
  IssueLinkInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIIssueLink
  JiraConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJiraConfig
  JiraConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJiraConfig
  JiraIssueSubscriber:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJIRAIssueSubscriber
  JiraIssueSubscriberInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJIRAIssueSubscriber
  JiraNotificationsConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJIRANotificationsConfig
  JiraNotificationsConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJIRANotificationsConfig
  JiraNotificationsProject:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJIRANotificationsProject
  JiraNotificationsProjectInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIJIRANotificationsProject
  JiraStatus:
    model: github.com/evergreen-ci/evergreen/thirdparty.JiraStatus
  JiraTicket:
    model: github.com/evergreen-ci/evergreen/thirdparty.JiraTicket
  KanopyAuthConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIKanopyAuthConfig
  KanopyAuthConfigInput:  
    model: github.com/evergreen-ci/evergreen/rest/model.APIKanopyAuthConfig
  LogBuffering:
    model: github.com/evergreen-ci/evergreen/rest/model.APILogBuffering
  LogBufferingInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APILogBuffering
  LoggerConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APILoggerConfig
  LoggerConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APILoggerConfig
  LogkeeperBuild:
    model: github.com/evergreen-ci/plank.Build
  LogkeeperTest:
    model: github.com/evergreen-ci/plank.Test
  LogMessage:
    model: github.com/evergreen-ci/evergreen/apimodels.LogMessage
  MergeQueue:
    model: github.com/evergreen-ci/evergreen/model.MergeQueue
  MetadataLink:
    model: github.com/evergreen-ci/evergreen/rest/model.APIMetadataLink
  MetadataLinkInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIMetadataLink
  Module:
    model: github.com/evergreen-ci/evergreen/rest/model.APIModule
  ModuleCodeChange:
    model: github.com/evergreen-ci/evergreen/rest/model.APIModulePatch
  MultiAuthConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIMultiAuthConfig 
  MultiAuthConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIMultiAuthConfig
  NaiveAuthConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APINaiveAuthConfig 
  NaiveAuthConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APINaiveAuthConfig 
  Note:
    model: github.com/evergreen-ci/evergreen/rest/model.APINote
  Notifications:
    model: github.com/evergreen-ci/evergreen/rest/model.APINotificationPreferences
  NotificationsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APINotificationPreferences
  NotifyConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APINotifyConfig
  NotifyConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APINotifyConfig
  OktaConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIOktaConfig
  OktaConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIOktaConfig
  OomTrackerInfo:
    model: github.com/evergreen-ci/evergreen/rest/model.APIOomTrackerInfo
  OSInfo:
    model: github.com/evergreen-ci/evergreen/rest/model.APIOSInfo
  OperatingSystemOpts:
    model: github.com/evergreen-ci/evergreen/thirdparty.OSInfoFilterOptions
  OverallocatedRule:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      TERMINATE: 
        value: github.com/evergreen-ci/evergreen.HostsOverallocatedTerminate
      IGNORE:
        value: github.com/evergreen-ci/evergreen.HostsOverallocatedIgnore
      DEFAULT:
        value: github.com/evergreen-ci/evergreen.HostsOverallocatedUseDefault
  OwnerRepo:
    model: github.com/evergreen-ci/evergreen/rest/model.APIOwnerRepo
  OwnerRepoInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIOwnerRepo
  Package:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPackage
  PackageOpts:
    model: github.com/evergreen-ci/evergreen/thirdparty.PackageFilterOptions
  Parameter:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParameter
  ParameterInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParameter
  ParameterStoreConfig: 
    model: github.com/evergreen-ci/evergreen/rest/model.APIParameterStoreConfig
  ParameterStoreConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParameterStoreConfig
  ParserProjectS3Config:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParserProjectS3Config
  ParserProjectS3ConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParserProjectS3Config
  ParsleyFilter:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParsleyFilter
  ParsleyFilterInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParsleyFilter
  ParsleySettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParsleySettings
  ParsleySettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIParsleySettings
  Patch:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPatch
    fields:
      projectIdentifier:
        resolver: true
  PatchTriggerAlias:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPatchTriggerDefinition
  PatchTriggerAliasInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPatchTriggerDefinition
  PeriodicBuild:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPeriodicBuildDefinition
  PeriodicBuildInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPeriodicBuildDefinition
  Permissions:
    fields:
      canCreateDistro:
        resolver: true
      canCreateProject:
        resolver: true
      canEditAdminSettings:
        resolver: true
      distroPermissions:
        resolver: true
      projectPermissions:
        resolver: true
      repoPermissions:
        resolver: true
  PersistentDNSConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPersistentDNSConfig
  PersistentDNSConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPersistentDNSConfig
  PlannerSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPlannerSettings
  PlannerSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPlannerSettings
  PlannerVersion:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      TUNABLE: 
        value: github.com/evergreen-ci/evergreen.PlannerVersionTunable
  Pod:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPod
  PodEventLogEntry:
    model: github.com/evergreen-ci/evergreen/rest/model.PodAPIEventLogEntry
  PodEventLogData:
    model: github.com/evergreen-ci/evergreen/rest/model.PodAPIEventData
  PodLifecycleConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPodLifecycleConfig
  PodLifecycleConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPodLifecycleConfig
  PreconditionScript:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPreconditionScript
  PreconditionScriptInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPreconditionScript
  PriorityLevel:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      EMERGENCY: 
        value: github.com/evergreen-ci/evergreen.PriorityLevelEmergency
      ALERT:
        value: github.com/evergreen-ci/evergreen.PriorityLevelAlert
      CRITICAL:
        value: github.com/evergreen-ci/evergreen.PriorityLevelCritical
      ERROR:
        value: github.com/evergreen-ci/evergreen.PriorityLevelError
      WARNING:
        value: github.com/evergreen-ci/evergreen.PriorityLevelWarning
      NOTICE:
        value: github.com/evergreen-ci/evergreen.PriorityLevelNotice
      INFO:
        value: github.com/evergreen-ci/evergreen.PriorityLevelInfo
      DEBUG:
        value: github.com/evergreen-ci/evergreen.PriorityLevelDebug
      TRACE:
        value: github.com/evergreen-ci/evergreen.PriorityLevelTrace
  Project:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectRef
    fields:
      patches:
        resolver: true
  ProjectAlias:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectAlias
  ProjectAliasInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectAlias
  ProjectBanner:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectBanner
  ProjectBannerInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectBanner
  ProjectCreationConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectCreationConfig
  ProjectCreationConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectCreationConfig
  ProjectEventLogEntry:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectEvent
  ProjectEventSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectEventSettings
  ProjectHealthView:
    model: github.com/evergreen-ci/evergreen/model.ProjectHealthView
  ProjectInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectRef
  ProjectSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectSettings
    fields:
      githubWebhooksEnabled:
        resolver: true
      vars:
        resolver: true
      aliases:
        resolver: true
      subscriptions:
        resolver: true
      githubAppAuth:
        resolver: true
  ProjectSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectSettings
  ProjectTasksPair:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectTasksPair
  ProjectTasksPairInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectTasksPair
  ProjectVars:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectVars
    fields:
      privateVars:
        resolver: true
      adminOnlyVars:
        resolver: true
  ProjectVarsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectVars
  Provider:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      DOCKER: 
        value: github.com/evergreen-ci/evergreen.ProviderNameDocker
      EC2_FLEET:
        value: github.com/evergreen-ci/evergreen.ProviderNameEc2Fleet
      EC2_ON_DEMAND:
        value: github.com/evergreen-ci/evergreen.ProviderNameEc2OnDemand
      STATIC:
        value: github.com/evergreen-ci/evergreen.ProviderNameStatic
  PublicKey:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPubKey
  ReleaseModeConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIReleaseModeConfig
  ReleaseModeConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIReleaseModeConfig
  RepoCommitQueueParams:
    model: github.com/evergreen-ci/evergreen/rest/model.APICommitQueueParams
  RepoEventLogEntry:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectEvent
  RepoEventSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectEventSettings
  RepoRef:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectRef
  RepoRefInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectRef
  RepoSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectSettings
    fields:
      githubWebhooksEnabled:
        resolver: true
      vars:
        resolver: true
      aliases:
        resolver: true
      subscriptions:
        resolver: true
      githubAppAuth:
        resolver: true
  RepoSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIProjectSettings
  RepotrackerConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIRepoTrackerConfig
  RepotrackerConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIRepoTrackerConfig
  RepotrackerError:
    model: github.com/evergreen-ci/evergreen/rest/model.APIRepositoryErrorDetails
  RepoWorkstationConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWorkstationConfig
  ResourceLimits:
    model: github.com/evergreen-ci/evergreen/rest/model.APIResourceLimits
  ResourceLimitsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIResourceLimits
  RestartAdminTasksOptions:
    model: github.com/evergreen-ci/evergreen/model.RestartOptions
    fields:
      includeSystemFailed:
        fieldName: includeSysFailed
  RoundingRule:
    model: github.com/99designs/gqlgen/graphql.String
    enum_values:
      UP: 
        value: github.com/evergreen-ci/evergreen.HostAllocatorRoundUp
      DOWN:
        value: github.com/evergreen-ci/evergreen.HostAllocatorRoundDown
      DEFAULT:
        value: github.com/evergreen-ci/evergreen.HostAllocatorRoundDefault
  RuntimeEnvironmentConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIRuntimeEnvironmentsConfig
  RuntimeEnvironmentConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIRuntimeEnvironmentsConfig
  S3Credentials:
    model: github.com/evergreen-ci/evergreen/rest/model.APIS3Credentials
  S3CredentialsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIS3Credentials
  SchedulerConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISchedulerConfig
  SchedulerConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISchedulerConfig
  SESConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISESConfig
  SESConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISESConfig
  SearchReturnInfo:
    model: github.com/evergreen-ci/evergreen/thirdparty.SearchReturnInfo
  SecretsManagerConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISecretsManagerConfig
  SecretsManagerConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISecretsManagerConfig
  Selector:
    model: github.com/evergreen-ci/evergreen/rest/model.APISelector
  SelectorInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISelector
  ServiceFlags:
    model: github.com/evergreen-ci/evergreen/rest/model.APIServiceFlags  
  ServiceFlagsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIServiceFlags  
  SingleTaskDistroConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISingleTaskDistroConfig
  SingleTaskDistroConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISingleTaskDistroConfig
  SiteBanner:
    model: github.com/evergreen-ci/evergreen/rest/model.APIBanner
  SleepSchedule:
    model: github.com/evergreen-ci/evergreen/model/host.SleepScheduleInfo
  SleepScheduleInput:
    model: github.com/evergreen-ci/evergreen/model/host.SleepScheduleInfo
  SleepScheduleConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISleepScheduleConfig
  SleepScheduleConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISleepScheduleConfig
  Source:
    model: github.com/evergreen-ci/evergreen/rest/model.APISource
  SlackConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISlackConfig
  SlackConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISlackConfig
  SlackOptions:
    model: github.com/evergreen-ci/evergreen/rest/model.APISlackOptions
  SlackOptionsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISlackOptions
  SpawnHostConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISpawnHostConfig
  SpawnHostConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISpawnHostConfig
  SplunkConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISplunkConfig
  SplunkConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISplunkConfig
  SplunkConnectionInfo:
    model: github.com/evergreen-ci/evergreen/rest/model.APISplunkConnectionInfo
  SplunkConnectionInfoInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISplunkConnectionInfo
  SpruceConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIAdminSettings
  SSHConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APISSHConfig
  SSHConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISSHConfig
  SSHKeyPair:
    model: github.com/evergreen-ci/evergreen/rest/model.APISSHKeyPair
  SSHKeyPairInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISSHKeyPair
  StatusCount:
    model: github.com/evergreen-ci/evergreen/model/task.StatusCount
  StepbackInfo:
    model: github.com/evergreen-ci/evergreen/rest/model.APIStepbackInfo
  StringMap:
    model: github.com/evergreen-ci/evergreen/graphql.StringMap
  Subnet:
    model: github.com/evergreen-ci/evergreen/rest/model.APISubnet
  SubnetInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISubnet
  SubscriberInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISubscriber
  SubscriberWrapper:
    model: github.com/evergreen-ci/evergreen/rest/model.APISubscriber
    fields:
      subscriber:
        resolver: true
  SubscriptionInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APISubscription
  Task:
    model: github.com/evergreen-ci/evergreen/rest/model.APITask
    fields:
      ami:
        resolver: true
      annotation:
        resolver: true
      baseTaskMetadata:
        resolver: true
      baseTask:
        resolver: true
      baseStatus:
        resolver: true
      buildVariantDisplayName:
        resolver: true
      canModifyAnnotation:
        resolver: true
      estimatedStart:
        resolver: true
      executionTasksFull:
        resolver: true
      patchMetadata:
        resolver: true
      projectIdentifier:
        resolver: true
      reliesOn:
        resolver: true
      spawnHostLink:
        resolver: true
      isPerfPluginEnabled:
        resolver: true
      project:
        resolver: true
  TaskAnnotationSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskAnnotationSettings
  TaskAnnotationSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskAnnotationSettings
  TaskContainerCreationOpts:
    model: github.com/evergreen-ci/evergreen/rest/model.APIPodTaskContainerCreationOptions
  TaskEndDetail:
    model: github.com/evergreen-ci/evergreen/rest/model.ApiTaskEndDetail
  TaskEventLogData:
    model: github.com/evergreen-ci/evergreen/rest/model.TaskEventData
  TaskEventLogEntry:
    model: github.com/evergreen-ci/evergreen/rest/model.TaskAPIEventLogEntry
  TaskInfo:
    model: github.com/evergreen-ci/evergreen/rest/model.TaskInfo
  TestSelectionConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APITestSelectionConfig
  TestSelectionConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITestSelectionConfig
  TaskLimitsConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskLimitsConfig
  TaskLimitsConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskLimitsConfig
  TaskLogs:
    fields:
      eventLogs:
        resolver: true
      taskLogs:
        resolver: true
      systemLogs:
        resolver: true
      agentLogs:
        resolver: true
      allLogs:
        resolver: true
  TaskLogLinks:
    model: github.com/evergreen-ci/evergreen/rest/model.LogLinks
  TaskSpecifier:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskSpecifier
  TaskSpecifierInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskSpecifier
  TaskStats:
    model: github.com/evergreen-ci/evergreen/model/task.TaskStats
  TaskQueueItem:
    model: github.com/evergreen-ci/evergreen/rest/model.APITaskQueueItem
  TestLog:
    model: github.com/evergreen-ci/evergreen/rest/model.TestLogs
  TestResult:
    model: github.com/evergreen-ci/evergreen/rest/model.APITest
  TicketFields:
    model: github.com/evergreen-ci/evergreen/thirdparty.TicketFields
  Toolchain:
    model: github.com/evergreen-ci/evergreen/rest/model.APIToolchain
  ToolchainOpts:
    model: github.com/evergreen-ci/evergreen/thirdparty.ToolchainFilterOptions
  TracerSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APITracerSettings
  TracerSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITracerSettings
  TriggerConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APITriggerConfig
  TriggerConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITriggerConfig
  TriggerAlias:
    model: github.com/evergreen-ci/evergreen/rest/model.APITriggerDefinition
  TriggerAliasInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APITriggerDefinition
  UIConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIUIConfig
  UIConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIUIConfig
  User:
    model: github.com/evergreen-ci/evergreen/rest/model.APIDBUser
    fields:
      patches:
        resolver: true
      subscriptions:
        resolver: true
  UserSettings:
    model: github.com/evergreen-ci/evergreen/rest/model.APIUserSettings
  UserSettingsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIUserSettings
  UseSpruceOptions:
    model: github.com/evergreen-ci/evergreen/rest/model.APIUseSpruceOptions
  UseSpruceOptionsInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIUseSpruceOptions
  VariantTask:
    model: github.com/evergreen-ci/evergreen/rest/model.VariantTask
  VariantTaskInput:
    model: github.com/evergreen-ci/evergreen/rest/model.VariantTask
  Version:
    model: github.com/evergreen-ci/evergreen/rest/model.APIVersion
    fields:
      status:
        resolver: true
  VersionToRestart:
    model: github.com/evergreen-ci/evergreen/model.VersionToRestart
  Volume:
    model: github.com/evergreen-ci/evergreen/rest/model.APIVolume
  WaterfallBuild:
    model: github.com/evergreen-ci/evergreen/model.WaterfallBuild
  WaterfallBuildVariant:
    model: github.com/evergreen-ci/evergreen/model.WaterfallBuildVariant
  WaterfallTask:
    model: github.com/evergreen-ci/evergreen/model.WaterfallTask
  Webhook:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWebHook
  WebhookHeader:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWebhookHeader
  WebhookHeaderInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWebhookHeader
  WebhookInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWebHook
  WebhookSubscriber:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWebhookSubscriber
  WebhookSubscriberInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWebhookSubscriber
  WorkstationConfig:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWorkstationConfig
  WorkstationConfigInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWorkstationConfig
  WorkstationSetupCommand:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWorkstationSetupCommand
  WorkstationSetupCommandInput:
    model: github.com/evergreen-ci/evergreen/rest/model.APIWorkstationSetupCommand
