{
  "tests": [
    {
      "query_file": "project_ref.graphql",
      "result": {
        "data": {
          "projectSettings": {
            "githubWebhooksEnabled": true,
            "projectRef": {
              "id": "sandbox_project_id",
              "identifier": "sandbox",
              "restricted": true,
              "commitQueue": {
                "enabled": true,
                "mergeMethod": "squash",
                "mergeQueue": "EVERGREEN"
              },
              "periodicBuilds": null,
              "githubChecksEnabled": null,
              "patchingDisabled": false,
              "prTestingEnabled": true,
              "stepbackDisabled": false,
              "batchTime": 2,
              "projectHealthView": "FAILED",
              "parsleyFilters": [
                {
                  "expression": "filter1",
                  "caseSensitive": false,
                  "exactMatch": false
                },
                {
                  "expression": "filter2",
                  "caseSensitive": true,
                  "exactMatch": true
                }
              ],
              "gitTagAuthorizedUsers": ["ablack12"],
              "gitTagAuthorizedTeams": null,
              "triggers": [
                {
                  "project": "spruce",
                  "level": "task",
                  "configFile": ".evergreen.yml",
                  "dateCutoff": null,
                  "unscheduleDownstreamVersions": true
                }
              ],
              "patchTriggerAliases": [
                {
                  "alias": "my_alias_sandbox",
                  "childProjectIdentifier": "varsTest",
                  "taskSpecifiers": [
                    {
                      "taskRegex": "test-util",
                      "variantRegex": "^ubuntu1604$"
                    }
                  ]
                }
              ],
              "taskSync": {
                "configEnabled": false,
                "patchEnabled": true
              },
              "perfEnabled": true,
              "buildBaronSettings": {
                "ticketCreateProject": "EVG",
                "ticketSearchProjects": ["EVG"],
                "bfSuggestionFeaturesURL": "",
                "bfSuggestionPassword": "",
                "bfSuggestionServer": "",
                "bfSuggestionTimeoutSecs": 0,
                "bfSuggestionUsername": "",
                "ticketCreateIssueType": ""
              },
              "taskAnnotationSettings": {
                "jiraCustomFields": [
                  {
                    "displayText": "description",
                    "field": "sample_field"
                  }
                ],
                "fileTicketWebhook": {
                  "endpoint": "endpoint",
                  "secret": "shh"
                }
              },
              "containerSizeDefinitions": [
                {
                  "name": "size1",
                  "cpu": 1,
                  "memoryMb": 1024
                },
                {
                  "name": "size2",
                  "cpu": 2,
                  "memoryMb": 2048
                }
              ],
              "externalLinks": [
                {
                  "displayName": "A link to somewhere",
                  "requesters": ["gitter_request", "github_pull_request"],
                  "urlTemplate": "https://a-fake-url-for-{version_id}.com/{version_id}"
                }
              ],
              "repotrackerError": {
                "exists": true,
                "invalidRevision": "invalid_revision",
                "mergeBaseRevision": ""
              }
            }
          }
        }
      }
    },
    {
      "query_file": "nonexistent.graphql",
      "result": {
        "data": null,
        "errors": [
          {
            "message": "Could not find project with identifier: evergreen",
            "path": ["projectSettings", "identifier"],
            "extensions": {
              "code": "RESOURCE_NOT_FOUND"
            }
          }
        ]
      }
    }
  ]
}
