{
  "tests": [
    {
      "query_file": "no_permissions.graphql",
      "test_user_id": "regular_user",
      "result": {
        "data": {
          "adminSettings": null
        },
        "errors": [
          {
            "message": "User 'regular_user' lacks required admin permissions",
            "path": ["adminSettings"],
            "extensions": {
              "code": "FORBIDDEN"
            }
          }
        ]
      }
    },
    {
      "query_file": "announcements.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "banner": "This is an important notification",
            "bannerTheme": "IMPORTANT"
          }
        }
      }
    },
    {
      "query_file": "external_communications.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "jira": {
              "email": "user@example.com",
              "host": "jira.example.com",
              "personalAccessToken": "token"
            },
            "slack": {
              "options": {
                "channel": "#cabc123",
                "hostname": "evergreen.example.com",
                "name": "testName",
                "username": "@testUser",
                "basicMetadata": true,
                "fields": true,
                "allFields": true,
                "fieldsSet": {
                  "field1": true,
                  "field2": false
                }
              },
              "token": "123456",
              "level": "EMERGENCY",
              "name": "test-app"
            },
            "splunk": {
              "splunkConnectionInfo": {
                "serverUrl": "testServer",
                "token": "testToken",
                "channel": "42"
              }
            },
            "runtimeEnvironments": {
              "baseUrl": "https://example.com",
              "apiKey": "runtimeAPIKey"
            },
            "testSelection": {
              "url": "https://example.com"
            },
            "fws": {
              "url": "https://fws.example.com"
            },
            "cedar": {
              "dbName": "cedar",
              "dbUrl": "mongodb://localhost:27017/cedar"
            }
          }
        }
      }
    },
    {
      "query_file": "auth.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "authConfig": {
              "okta": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "issuer": "issuer",
                "scopes": ["option1", "option2"],
                "userGroup": "user_group",
                "expireAfterMinutes": 0
              },
              "naive": {
                "users": [
                  {
                    "username": "admin",
                    "displayName": "Evergreen Admin",
                    "password": "password",
                    "email": ""
                  },
                  {
                    "username": "regular",
                    "displayName": "Regular User",
                    "password": "password",
                    "email": ""
                  },
                  {
                    "username": "privileged",
                    "displayName": "Privileged User",
                    "password": "password",
                    "email": ""
                  }
                ]
              },
              "github": {
                "appId": 1234,
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "defaultOwner": "default_owner",
                "defaultRepo": "default_repo",
                "organization": "organization",
                "users": []
              },
              "multi": {
                "readWrite": ["admin", "privileged"],
                "readOnly": ["admin", "privileged", "regular"]
              },
              "kanopy": {
                "headerName": "",
                "issuer": "https://kanopy.com",
                "keysetURL": "https://kanopy.com/keyset"
              },
              "preferredType": "NAIVE",
              "backgroundReauthMinutes": 0,
              "allowServiceUsers": false
            }
          }
        }
      }
    },
    {
      "query_file": "runners.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "notify": {
              "ses": {
                "senderAddress": "evg-sender@email.com"
              }
            },
            "hostInit": {
              "hostThrottle": 32,
              "provisioningThrottle": 100,
              "cloudStatusBatchSize": 100,
              "maxTotalDynamicHosts": 1000
            },
            "taskLimits": {
              "maxTasksPerVersion": 500,
              "maxTaskExecution": 5,
              "maxDailyAutomaticRestarts": 0,
              "maxIncludesPerVersion": 10,
              "maxHourlyPatchTasks": 500,
              "maxPendingGeneratedTasks": 0,
              "maxGenerateTaskJSONSize": 5,
              "maxConcurrentLargeParserProjectTasks": 1,
              "maxDegradedModeConcurrentLargeParserProjectTasks": 1,
              "maxDegradedModeParserProjectSize": 10,
              "maxParserProjectSize": 0,
              "maxExecTimeoutSecs": 10000
            },
            "scheduler": {
              "taskFinder": "LEGACY",
              "patchFactor": 50,
              "patchTimeInQueueFactor": 20,
              "commitQueueFactor": 0,
              "mainlineTimeInQueueFactor": 0,
              "expectedRuntimeFactor": 10,
              "generateTaskFactor": 50,
              "numDependentsFactor": 5,
              "stepbackTaskFactor": 10,
              "hostAllocator": "UTILIZATION",
              "hostAllocatorRoundingRule": "DOWN",
              "hostAllocatorFeedbackRule": "NO_FEEDBACK",
              "hostsOverallocatedRule": "IGNORE",
              "futureHostFraction": 0.5,
              "cacheDurationSeconds": 60,
              "targetTimeSeconds": 60,
              "acceptableHostIdleTimeSeconds": 30,
              "groupVersions": true
            },
            "repotracker": {
              "numNewRepoRevisionsToFetch": 2,
              "maxRepoRevisionsToSearch": 20,
              "maxConcurrentRequests": 0
            },
            "podLifecycle": {
              "maxParallelPodRequests": 100,
              "maxPodDefinitionCleanupRate": 0,
              "maxSecretCleanupRate": 0
            }
          }
        }
      }
    },
    {
      "query_file": "web.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "api": {
              "httpListenAddr": "",
              "url": "http://localhost:9090",
              "corpUrl": ""
            },
            "ui": {
              "url": "http://localhost:9090",
              "helpUrl": "",
              "uiv2Url": "http://localhost:3000",
              "parsleyUrl": "http://localhost:4173",
              "httpListenAddr": ":9090",
              "secret": "this is a secret",
              "defaultProject": "evergreen",
              "corsOrigins": [
                "http://localhost:3000",
                "http://localhost:5173",
                "http://localhost:4173"
              ],
              "fileStreamingContentTypes": [
                "application/json",
                "text/plain",
                "text/csv"
              ],
              "loginDomain": "",
              "userVoice": "https://uservoice.com",
              "csrfKey": "",
              "cacheTemplates": false,
              "stagingEnvironment": "",
              "betaFeatures": {
                "spruceWaterfallEnabled": true
              }
            },
            "disabledGQLQueries": []
          }
        }
      }
    },
    {
      "query_file": "background_processing.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "amboy": {
              "name": "amboy-config",
              "singleName": "amboy-single",
              "poolSizeLocal": 10,
              "poolSizeRemote": 10,
              "localStorage": 100,
              "groupDefaultWorkers": 1,
              "groupBackgroundCreateFrequencyMinutes": 10,
              "groupPruneFrequencyMinutes": 10,
              "groupTTLMinutes": 100,
              "lockTimeoutMinutes": 10,
              "sampleSize": 100,
              "retry": {
                "numWorkers": 10,
                "maxCapacity": -1,
                "maxRetryAttempts": 10,
                "maxRetryTimeSeconds": 30,
                "retryBackoffSeconds": 30,
                "staleRetryingMonitorIntervalSeconds": 30
              },
              "namedQueues": [
                {
                  "name": "amboy.queue.1",
                  "regexp": "",
                  "numWorkers": 2,
                  "sampleSize": 10,
                  "lockTimeoutSeconds": 0
                },
                {
                  "name": "amboy.queue.2",
                  "regexp": "",
                  "numWorkers": 2,
                  "sampleSize": 10,
                  "lockTimeoutSeconds": 30
                }
              ]
            },
            "amboyDB": {
              "database": "amboy",
              "url": "amboy-db-connection-url"
            },
            "loggerConfig": {
              "buffer": {
                "useAsync": true,
                "durationSeconds": 10,
                "count": 20,
                "incomingBufferFactor": 50
              },
              "defaultLevel": "INFO",
              "thresholdLevel": "DEBUG",
              "logkeeperURL": "logkeeper-url",
              "redactKeys": ["secret", "password"]
            },
            "notify": {
              "bufferIntervalSeconds": 30,
              "bufferTargetPerInterval": 30
            },
            "triggers": {
              "generateTaskDistro": "archlinux-test"
            }
          }
        }
      }
    },
    {
      "query_file": "other.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "configDir": "../config",
            "domainName": "localhost",
            "githubOrgs": ["evergreen-ci"],
            "githubPRCreatorOrg": "evergreen-ci",
            "githubWebhookSecret": "webhook_secret",
            "logPath": "/var/log/evergreen",
            "perfMonitoringKanopyURL": "https://kanopy.example.com",
            "perfMonitoringURL": "https://perf.example.com",
            "pprofPort": "6660",
            "shutdownWaitSeconds": 0,
            "singleTaskDistro": {
              "projectTasksPairs": [
                {
                  "projectId": "evergreen",
                  "allowedTasks": ["compile", "test"],
                  "allowedBVs": ["windows", "ubuntu1604"]
                },
                {
                  "projectId": "spruce",
                  "allowedTasks": ["lint", "storybook"],
                  "allowedBVs": []
                }
              ]
            },
            "buckets": {
              "logBucket": {
                "name": "s3 bucket",
                "testResultsPrefix": null,
                "roleARN": null
              },
              "testResultsBucket": {
                "name": "test bucket",
                "testResultsPrefix": "all",
                "roleARN": ""
              }
            },
            "ssh": {
              "taskHostKey": {
                "name": "task host key",
                "secretARN": "\u003csecret_arn\u003e"
              },
              "spawnHostKey": {
                "name": "spawn host key",
                "secretARN": "\u003csecret_arn\u003e"
              }
            },
            "expansions": {
              "github_app_key": "someKey"
            },
            "hostJasper": {
              "binaryName": "binary",
              "downloadFileName": "download",
              "port": 2385,
              "url": "http://localhost:9090",
              "version": "1123"
            },
            "jiraNotifications": {
              "customFields": [
                {
                  "project": "CUSTOM PROJECT",
                  "fields": {},
                  "components": ["component"],
                  "labels": ["label"]
                },
                {
                  "project": "OTHER PROJECT",
                  "fields": {},
                  "components": [],
                  "labels": []
                }
              ]
            },
            "spawnhost": {
              "unexpirableHostsPerUser": 2,
              "unexpirableVolumesPerUser": 1,
              "spawnHostsPerUser": 6
            },
            "sleepSchedule": {
              "permanentlyExemptHosts": ["1135"]
            },
            "tracer": {
              "enabled": false,
              "collectorEndpoint": "\u003ccollector_endpoint\u003e",
              "collectorInternalEndpoint": "\u003ccollector_internal_endpoint\u003e",
              "collectorAPIKey": "\u003ccollector_api_key\u003e"
            },
            "projectCreation": {
              "totalProjectLimit": 10,
              "repoProjectLimit": 2,
              "jiraProject": "",
              "repoExceptions": [
                {
                  "owner": "evergreen-ci",
                  "repo": "evergreen"
                },
                {
                  "owner": "mongodb",
                  "repo": "mongo"
                }
              ]
            },
            "githubCheckRun": {
              "checkRunLimit": 0
            },
            "releaseMode": {
              "distroMaxHostsFactor": 1,
              "targetTimeSecondsOverride": 0,
              "idleTimeSecondsOverride": 0
            }
          }
        }
      }
    },
    {
      "query_file": "providers.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "containerPools": {
              "pools": [
                {
                  "id": "test-pool-1",
                  "distro": "ubuntu1604-parent",
                  "maxContainers": 5,
                  "port": 2525
                },
                {
                  "id": "test-pool-2",
                  "distro": "ubuntu1604-parent",
                  "maxContainers": 10,
                  "port": 4649
                }
              ]
            },
            "projectCreation": {
              "repoExceptions": [
                {
                  "owner": "evergreen-ci",
                  "repo": "evergreen"
                },
                {
                  "owner": "mongodb",
                  "repo": "mongo"
                }
              ]
            },
            "providers": {
              "aws": {
                "ec2Keys": [
                  {
                    "name": "test-key-1",
                    "key": "21039487102938470912837",
                    "secret": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
                  },
                  {
                    "name": "test-key-2",
                    "key": "120938471209384701298",
                    "secret": "je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY"
                  }
                ],
                "subnets": [
                  {
                    "az": "us-east-1a",
                    "subnetId": "subnet-12345678"
                  },
                  {
                    "az": "us-east-1b",
                    "subnetId": "subnet-87654321"
                  }
                ],
                "parserProject": {
                  "key": "AKIAIOSFODNN7EXAMPLE",
                  "secret": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
                  "bucket": "evergreen-parser-projects",
                  "generatedJSONPrefix": "generated-json/"
                },
                "persistentDNS": {
                  "hostedZoneID": "Z1D633PJN98FT9",
                  "domain": "evergreen.example.com"
                },
                "defaultSecurityGroup": "sg-12345678",
                "allowedInstanceTypes": ["m5.large", "m5.xlarge", "c5.large"],
                "alertableInstanceTypes": ["m5.24xlarge", "c5.24xlarge"],
                "allowedRegions": ["us-east-1", "us-west-1", "us-west-2"],
                "maxVolumeSizePerUser": 1000,
                "pod": {
                  "role": "arn:aws:iam::123456789012:role/ECSTaskRole",
                  "region": "us-east-1",
                  "ecs": {
                    "maxCPU": 1024,
                    "maxMemoryMb": 1024,
                    "taskDefinitionPrefix": "evergreen-",
                    "taskRole": "arn:aws:iam::123456789012:role/ECSTaskRole",
                    "executionRole": "arn:aws:iam::123456789012:role/ECSExecutionRole",
                    "logRegion": "us-east-1",
                    "logGroup": "/evergreen/ecs",
                    "logStreamPrefix": "evergreen-task-",
                    "awsVPC": {
                      "subnets": ["subnet-12345678", "subnet-87654321"],
                      "securityGroups": ["sg-12345678", "sg-87654321"]
                    },
                    "clusters": [
                      {
                        "name": "evergreen-cluster-1",
                        "os": "linux"
                      },
                      {
                        "name": "evergreen-cluster-2",
                        "os": "windows"
                      }
                    ],
                    "capacityProviders": [
                      {
                        "name": "FARGATE",
                        "os": "ECS_OS_LINUX",
                        "arch": "ECS_ARCH_AMD64",
                        "windowsVersion": ""
                      },
                      {
                        "name": "EC2",
                        "os": "ECS_OS_LINUX",
                        "arch": "ECS_ARCH_ARM64",
                        "windowsVersion": ""
                      }
                    ],
                    "allowedImages": [
                      "amazonlinux:latest",
                      "ubuntu:20.04",
                      "centos:8"
                    ]
                  }
                },
                "accountRoles": [
                  {
                    "account": "123456789012",
                    "role": "arn:aws:iam::123456789012:role/EvergreenCrossAccountRole"
                  },
                  {
                    "account": "987654321098",
                    "role": "arn:aws:iam::987654321098:role/EvergreenCrossAccountRole"
                  }
                ],
                "ipamPoolID": "ipam-pool-12345678",
                "elasticIPUsageRate": 0.8
              },
              "docker": {
                "apiVersion": "1.40"
              }
            },
            "parameterStore": {
              "prefix": "store"
            }
          }
        }
      }
    }
  ]
}
