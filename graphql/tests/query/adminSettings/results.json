{
  "tests": [
    {
      "query_file": "no_permissions.graphql",
      "test_user_id": "regular_user",
      "result": {
        "data": {
          "adminSettings": null
        },
        "errors": [
          {
            "message": "User 'regular_user' lacks required admin permissions",
            "path": ["adminSettings"],
            "extensions": {
              "code": "FORBIDDEN"
            }
          }
        ]
      }
    },
    {
      "query_file": "announcements.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "banner": "This is an important notification",
            "bannerTheme": "ANNOUNCEMENT"
          }
        }
      }
    },
    {
      "query_file": "auth.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "authConfig": {
              "okta": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "issuer": "issuer",
                "scopes": ["option1", "option2"],
                "userGroup": "user_group",
                "expireAfterMinutes": 0
              },
              "naive": {
                "users": [
                  {
                    "username": "admin",
                    "displayName": "Evergreen Admin",
                    "password": "password",
                    "email": ""
                  },
                  {
                    "username": "regular",
                    "displayName": "Regular User",
                    "password": "password",
                    "email": ""
                  },
                  {
                    "username": "privileged",
                    "displayName": "Privileged User",
                    "password": "password",
                    "email": ""
                  }
                ]
              },
              "github": {
                "appId": 1234,
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "defaultOwner": "default_owner",
                "defaultRepo": "default_repo",
                "organization": "organization",
                "users": []
              },
              "multi": {
                "readWrite": ["admin", "privileged"],
                "readOnly": ["admin", "privileged", "regular"]
              },
              "kanopy": {
                "headerName": "",
                "issuer": "https://kanopy.com",
                "keysetURL": "https://kanopy.com/keyset"
              },
              "preferredType": "naive",
              "backgroundReauthMinutes": 0,
              "allowServiceUsers": false
            }
          }
        }
      }
    },
    {
      "query_file": "runners.graphql",
      "result": {
        "data": {
          "adminSettings": {
            "notify": {
              "ses": {
                "senderAddress": "evg-sender@email.com"
              }
            },
            "hostInit": {
              "hostThrottle": 32,
              "provisioningThrottle": 100,
              "cloudStatusBatchSize": 100,
              "maxTotalDynamicHosts": 1000
            },
            "taskLimits": {
              "maxTasksPerVersion": 500,
              "maxTaskExecution": 5,
              "maxDailyAutomaticRestarts": 0,
              "maxIncludesPerVersion": 10,
              "maxHourlyPatchTasks": 500,
              "maxPendingGeneratedTasks": 0,
              "maxGenerateTaskJSONSize": 5,
              "maxConcurrentLargeParserProjectTasks": 1,
              "maxDegradedModeConcurrentLargeParserProjectTasks": 1,
              "maxDegradedModeParserProjectSize": 10,
              "maxParserProjectSize": 0,
              "maxExecTimeoutSecs": 10000
            },
            "scheduler": {
              "taskFinder": "LEGACY",
              "patchFactor": 50,
              "patchTimeInQueueFactor": 20,
              "commitQueueFactor": 0,
              "mainlineTimeInQueueFactor": 0,
              "expectedRuntimeFactor": 10,
              "generateTaskFactor": 50,
              "numDependentsFactor": 5,
              "stepbackTaskFactor": 10,
              "hostAllocator": "UTILIZATION",
              "hostAllocatorRoundingRule": "DOWN",
              "hostAllocatorFeedbackRule": "NO_FEEDBACK",
              "hostsOverallocatedRule": "IGNORE",
              "futureHostFraction": 0.5,
              "cacheDurationSeconds": 60,
              "targetTimeSeconds": 60,
              "acceptableHostIdleTimeSeconds": 30,
              "groupVersions": true
            },
            "repotracker": {
              "numNewRepoRevisionsToFetch": 2,
              "maxRepoRevisionsToSearch": 20,
              "maxConcurrentRequests": 0
            },
            "podLifecycle": {
              "maxParallelPodRequests": 100,
              "maxPodDefinitionCleanupRate": 0,
              "maxSecretCleanupRate": 0
            }
          }
        }
      }
    }
  ]
}
