input WaterfallOptions {
  date: Time
  limit: Int = 5
  "Return versions with an order greater than minOrder. Used for paginating backward."
  minOrder: Int
  "Return versions with an order lower than maxOrder. Used for paginating forward."
  maxOrder: Int
  projectIdentifier: String!
    @requireProjectAccess(permission: TASKS, access: VIEW)
  requesters: [String!]
  revision: String
}

type WaterfallTask {
  id: String!
  displayName: String!
  execution: Int!
  status: String!
}

type WaterfallBuild {
  id: String!
  activated: Boolean
  displayName: String!
  version: String!
  tasks: [WaterfallTask!]!
}

type WaterfallBuildVariant {
  id: String!
  builds: [WaterfallBuild!]!
  displayName: String!
  version: String!
}

type WaterfallVersion {
  inactiveVersions: [Version!]
  version: Version
}

type WaterfallPagination {
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  nextPageOrder: Int!
  prevPageOrder: Int!
}

type Waterfall {
  buildVariants: [WaterfallBuildVariant!]!
  versions: [WaterfallVersion!]!
  flattenedVersions: [Version!]!
  pagination: WaterfallPagination!
}
