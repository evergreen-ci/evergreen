###### INPUTS ######
input RepoRefInput {
  id: String! @requireProjectAccess(access: EDIT)
  admins: [String!]
  batchTime: Int
  buildBaronSettings: BuildBaronSettingsInput
  commitQueue: CommitQueueParamsInput
  deactivatePrevious: Boolean
  disabledStatsCache: Boolean
  dispatchingDisabled: Boolean
  displayName: String
  enabled: Boolean
  externalLinks: [ExternalLinkInput!]
  githubChecksEnabled: Boolean
  githubTriggerAliases: [String!]
  gitTagAuthorizedTeams: [String!]
  gitTagAuthorizedUsers: [String!]
  gitTagVersionsEnabled: Boolean
  manualPrTestingEnabled: Boolean
  notifyOnBuildFailure: Boolean
  owner: String
  parsleyFilters: [ParsleyFilterInput!]
  patchingDisabled: Boolean
  patchTriggerAliases: [PatchTriggerAliasInput!]
  perfEnabled: Boolean
  periodicBuilds: [PeriodicBuildInput!]
  private: Boolean
  prTestingEnabled: Boolean
  remotePath: String
  repo: String
  repotrackerDisabled: Boolean
  restricted: Boolean
  spawnHostScriptPath: String
  stepbackDisabled: Boolean
  taskAnnotationSettings: TaskAnnotationSettingsInput
  taskSync: TaskSyncOptionsInput
  tracksPushEvents: Boolean
  triggers: [TriggerAliasInput!]
  versionControlEnabled: Boolean
  workstationConfig: WorkstationConfigInput
  containerSizeDefinitions: [ContainerResourcesInput!]
}

###### TYPES ######
"""
RepoRef is technically a special kind of Project.
Repo types have booleans defaulted, which is why it is necessary to redeclare the types despite them matching nearly
exactly.
"""
type RepoRef {
  id: String!
  admins: [String!]!
  batchTime: Int!
  buildBaronSettings: BuildBaronSettings!
  commitQueue: RepoCommitQueueParams!
  containerSizeDefinitions: [ContainerResources!]
  deactivatePrevious: Boolean!
  disabledStatsCache: Boolean!
  dispatchingDisabled: Boolean!
  displayName: String!
  enabled: Boolean!
  githubChecksEnabled: Boolean!
  githubTriggerAliases: [String!]
  gitTagAuthorizedTeams: [String!]
  gitTagAuthorizedUsers: [String!]
  gitTagVersionsEnabled: Boolean!
  manualPrTestingEnabled: Boolean!
  notifyOnBuildFailure: Boolean!
  owner: String!
  parsleyFilters: [ParsleyFilter!]
  patchingDisabled: Boolean!
  patchTriggerAliases: [PatchTriggerAlias!]
  perfEnabled: Boolean!
  periodicBuilds: [PeriodicBuild!]
  private: Boolean!
  prTestingEnabled: Boolean!
  remotePath: String!
  repo: String!
  repotrackerDisabled: Boolean!
  restricted: Boolean!
  spawnHostScriptPath: String!
  stepbackDisabled: Boolean!
  taskAnnotationSettings: TaskAnnotationSettings!
  taskSync: RepoTaskSyncOptions!
  tracksPushEvents: Boolean!
  triggers: [TriggerAlias!]!
  versionControlEnabled: Boolean!
  workstationConfig: RepoWorkstationConfig!
  externalLinks: [ExternalLink!]
}

type RepoCommitQueueParams {
  enabled: Boolean!
  mergeMethod: String!
  mergeQueue: MergeQueue!
  message: String!
}

type RepoTaskSyncOptions {
  configEnabled: Boolean!
  patchEnabled: Boolean!
}

type RepoWorkstationConfig {
  gitClone: Boolean!
  setupCommands: [WorkstationSetupCommand!]
}

type WorkstationSetupCommand {
  command: String!
  directory: String!
}
