package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"sort"

	restModel "github.com/evergreen-ci/evergreen/rest/model"
)

// AdminOnlyVars is the resolver for the adminOnlyVars field.
func (r *projectVarsResolver) AdminOnlyVars(ctx context.Context, obj *restModel.APIProjectVars) ([]string, error) {
	res := []string{}
	for varAlias, isAdminOnly := range obj.AdminOnlyVars {
		if isAdminOnly {
			res = append(res, varAlias)
		}
	}
	sort.Strings(res)
	return res, nil
}

// PrivateVars is the resolver for the privateVars field.
func (r *projectVarsResolver) PrivateVars(ctx context.Context, obj *restModel.APIProjectVars) ([]string, error) {
	res := []string{}
	for privateAlias, isPrivate := range obj.PrivateVars {
		if isPrivate {
			res = append(res, privateAlias)
		}
	}
	sort.Strings(res)
	return res, nil
}

// ProjectVars returns ProjectVarsResolver implementation.
func (r *Resolver) ProjectVars() ProjectVarsResolver { return &projectVarsResolver{r} }

type projectVarsResolver struct{ *Resolver }
