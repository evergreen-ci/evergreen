{"_id": {"$oid": "5e4ff3abe3c3317e352062e4"},"desc": "'evergreen-ci/evergreen' pull request #3186 by bsamek: EVG-7425 Don't send ShouldExit to unprovisioned hosts (https://github.com/evergreen-ci/evergreen/pull/3186)", "branch": "evergreen", "githash": "5e823e1f28baeaa22ae00823d83e03082cd148ab", "patch_number": 2567, "author": "brian.samek", "version": "5e4ff3abe3c3317e352062e4", "status": "failed", "create_time": { "$date": "2020-02-21T15:13:28Z" }, "start_time": { "$date": "2020-02-21T15:14:26.122Z" }, "finish_time": { "$date": "2020-02-21T15:29:54.869Z" }, "build_variants": ["ubuntu1604", "lint"], "tasks": [ "test-model-host", "test-model-artifact", "test-model-distro", "test-cloud", "test-validator", "test-plugin", "test-command", "test-db", "test-operations", "test-units", "test-model", "test-model-user", "test-model-stats", "js-test", "test-model-commitqueue", "test-monitor", "test-migrations", "test-scheduler", "test-util", "test-model-notification", "test-model-patch", "test-rest-route", "test-repotracker", "test-model-task", "test-rest-data", "test-model-manifest", "test-model-testresult", "test-model-grid", "test-model-build", "test-model-event", "test-trigger", "test-model-alertrecord", "test-service", "test-evergreen", "test-rest-model", "test-auth", "generate-lint", "test-rest-client", "test-thirdparty-docker", "test-agent", "test-graphql", "test-thirdparty" ], "variants_tasks": [{ "variant": "ubuntu1604", "tasks": [ "test-validator", "test-model-artifact", "test-model-distro", "test-migrations", "test-units", "test-operations", "test-thirdparty", "test-trigger", "test-model", "test-model-user", "test-thirdparty-docker", "test-cloud", "test-rest-client", "test-model-alertrecord", "test-model-stats", "test-plugin", "test-service", "test-evergreen", "test-rest-model", "test-agent", "test-rest-data", "test-util", "test-model-notification", "test-model-patch", "test-auth", "test-rest-route", "test-model-manifest", "test-repotracker", "js-test", "test-model-task", "test-model-commitqueue", "test-command", "test-graphql", "test-model-testresult", "test-model-grid", "test-monitor", "test-model-host", "test-model-build", "test-model-event", "test-db", "test-scheduler" ], "displaytasks": [] }, { "variant": "lint", "tasks": ["generate-lint"], "displaytasks": [] } ], "patches": [{ "name": "", "githash": "5e823e1f28baeaa22ae00823d83e03082cd148ab", "patch_set": { "patch_file_id": "5e4ff3ab850e6136624eaf95_5e823e1f28baeaa22ae00823d83e03082cd148ab", "summary": [{ "filename": "service/api_task.go", "additions": 5, "deletions": 4 }] }, "message": "" }], "activated": true, "patched_config": "command_type: test\nstepback: true\nignore:\n - \"*.md\" # don't schedule tests if a commit only changes markdown files\n - \"scripts/*\" # our scripts are untested, so don't schedule tests for them\n - \".github/*\" # github CODEOWNERS configuration\n\npost:\n - func: attach-test-results\n - command: s3.put\n type: system\n params:\n aws_key: ${aws_key}\n aws_secret: ${aws_secret}\n local_files_include_filter:\n [\n \"gopath/src/github.com/evergreen-ci/evergreen/bin/output.*.coverage.html\",\n ]\n remote_file: evergreen/${task_id}/\n bucket: mciuploads\n content_type: text/html\n permissions: public-read\n display_name: \"(html) coverage:\"\n - command: s3.put\n type: system\n params:\n aws_key: ${aws_key}\n aws_secret: ${aws_secret}\n local_files_include_filter:\n [\"gopath/src/github.com/evergreen-ci/evergreen/bin/output.*.coverage\"]\n remote_file: evergreen/${task_id}/\n bucket: mciuploads\n content_type: text/plain\n permissions: public-read\n display_name: \"(txt) coverage:\"\n\n#######################################\n# YAML Templates #\n#######################################\nvariables:\n - &run-build\n # runs a build operations. The task name in evergreen should\n # correspond to a make target for the build operation.\n name: test\n commands:\n - func: get-project\n - func: run-make\n vars: { target: \"${task_name}\" }\n - command: s3.put\n type: system\n params:\n optional: true\n aws_key: ${aws_key}\n aws_secret: ${aws_secret}\n local_file: gopath/src/github.com/evergreen-ci/evergreen/bin/${task_name}.tar.gz\n remote_file: evergreen/${build_id}-${build_variant}/evergreen-${task_name}-${revision}.tar.gz\n bucket: mciuploads\n content_type: application/x-gzip\n permissions: public-read\n display_name: dist.tar.gz\n - &run-go-test-suite\n # runs a make target and then uploads gotest output to\n # evergreen. The test name should correspond to a make target for\n # that suite\n name: test\n commands:\n - func: get-project\n - func: setup-credentials\n - func: run-make\n vars:\n target: revendor\n - func: run-make\n vars: { target: \"${task_name}\" }\n - &run-go-test-suite-with-docker\n name: test\n commands:\n - func: get-project\n - func: setup-credentials\n - func: setup-mongodb\n - func: setup-docker-host\n - func: run-make\n vars:\n target: revendor\n - func: run-make\n vars: { target: \"${task_name}\" }\n - &run-go-test-suite-with-mongodb\n # runs a make target above, but only on systems that have a\n # running mongod started for testing.\n name: test\n commands:\n - func: get-project\n - func: setup-credentials\n - func: setup-mongodb\n - func: run-make\n vars:\n target: revendor\n - func: run-make\n vars: { target: \"${task_name}\" }\n - &run-go-test-suite-with-mongodb-useast\n # runs a make target above, but only on systems that have a\n # running mongod started for testing.\n name: test\n commands:\n - func: get-project\n - func: setup-credentials\n - func: setup-mongodb\n - func: run-make\n vars:\n target: revendor\n - func: run-make\n vars: { target: \"${task_name}\", tz: \"America/New_York\" }\n - &run-smoke-test\n name: smoke\n commands:\n - command: timeout.update\n params:\n exec_timeout_secs: 900\n timeout_secs: 900\n - func: get-project\n - func: setup-mongodb\n - func: run-make\n vars: { target: \"set-var\" }\n - func: run-make\n vars: { target: \"set-project-var\" }\n - func: run-make\n vars: { target: \"load-smoke-data\" }\n - command: subprocess.exec\n params:\n silent: true\n working_dir: gopath/src/github.com/evergreen-ci/evergreen\n command: bash scripts/setup-smoke-config.sh ${github_token}\n - func: run-make\n vars:\n target: set-smoke-vars\n - func: run-make\n vars:\n target: \"${task_name}\"\n - &run-smoke-test-with-client-url\n name: smoke\n commands:\n - command: timeout.update\n params:\n exec_timeout_secs: 900\n timeout_secs: 900\n - func: get-project\n - func: run-make\n vars: { target: \"cli\" }\n - command: s3.put\n type: system\n params:\n aws_key: ${aws_key}\n aws_secret: ${aws_secret}\n local_file: gopath/src/github.com/evergreen-ci/evergreen/clients/${goos}_${goarch}/evergreen\n remote_file: evergreen/${task_id}/evergreen-ci/evergreen/clients/${goos}_${goarch}/evergreen\n bucket: mciuploads\n content_type: application/octet-stream\n permissions: public-read\n display_name: evergreen\n - func: setup-mongodb\n - func: run-make\n vars: { target: \"set-var\" }\n - func: run-make\n vars: { target: \"set-project-var\" }\n - func: run-make\n vars: { target: \"load-smoke-data\" }\n - command: subprocess.exec\n params:\n silent: true\n working_dir: gopath/src/github.com/evergreen-ci/evergreen\n command: bash scripts/setup-smoke-config.sh ${github_token}\n - func: run-make\n vars:\n target: set-smoke-vars\n - func: run-make\n vars:\n target: \"${task_name}\"\n - &version-constants\n nodejs_version: \"6.11.1\"\n - &run-generate-lint\n name: generate-lint\n commands:\n - func: get-project\n - func: run-make\n vars: { target: \"${task_name}\" }\n - command: s3.put\n type: system\n params:\n aws_key: ${aws_key}\n aws_secret: ${aws_secret}\n local_file: gopath/src/github.com/evergreen-ci/evergreen/bin/generate-lint.json\n remote_file: evergreen/${build_id}-${build_variant}/bin/generate-lint.json\n bucket: mciuploads\n content_type: application/json\n permissions: public-read\n display_name: generate-lint.json\n - command: generate.tasks\n params:\n files:\n - gopath/src/github.com/evergreen-ci/evergreen/bin/generate-lint.json\n\n#######################################\n# Functions #\n#######################################\nfunctions:\n get-project:\n command: git.get_project\n type: setup\n params:\n directory: gopath/src/github.com/evergreen-ci/evergreen\n token: ${github_token}\n shallow_clone: true\n run-make:\n command: subprocess.exec\n params:\n working_dir: gopath/src/github.com/evergreen-ci/evergreen\n binary: make\n args: [\"${make_args|}\", \"${target}\"]\n env:\n AWS_KEY: ${aws_key}\n AWS_SECRET: ${aws_secret}\n CLIENT_URL: https://s3.amazonaws.com/mciuploads/evergreen/${task_id}/evergreen-ci/evergreen/clients/${goos}_${goarch}/evergreen\n DEBUG_ENABLED: ${debug}\n DISABLE_COVERAGE: ${disable_coverage}\n DOCKER_HOST: ${docker_host}\n EVERGREEN_ALL: \"true\"\n GOARCH: ${goarch}\n GO_BIN_PATH: ${gobin}\n LEGACY_GO_BIN_PATH: ${legacyGobin}\n GOOS: ${goos}\n GOPATH: ${workdir}/gopath\n GOROOT: ${goroot}\n IS_DOCKER: ${is_docker}\n KARMA_REPORTER: junit\n NODE_BIN_PATH: ${nodebin}\n RACE_DETECTOR: ${race_detector}\n SETTINGS_OVERRIDE: creds.yml\n SMOKE_TEST_FILE: ${smoke_test_file}\n TEST_TIMEOUT: ${test_timeout}\n TZ: ${tz}\n VENDOR_PKG: \"github.com/${trigger_repo_owner}/${trigger_repo_name}\"\n VENDOR_REVISION: ${trigger_revision}\n XC_BUILD: ${xc_build}\n setup-credentials:\n command: subprocess.exec\n type: setup\n params:\n silent: true\n working_dir: gopath/src/github.com/evergreen-ci/evergreen\n env:\n GITHUB_TOKEN: ${github_token}\n JIRA_SERVER: ${jiraserver}\n CROWD_SERVER: ${crowdserver}\n CROWD_USER: ${crowduser}\n CROWD_PW: ${crowdpw}\n AWS_KEY: ${aws_key}\n AWS_SECRET: ${aws_secret}\n command: bash scripts/setup-credentials.sh\n setup-mongodb:\n - command: subprocess.exec\n type: setup\n params:\n env:\n gobin: /opt/golang/go1.9/bin/go\n MONGODB_URL: ${mongodb_url}\n DECOMPRESS: ${decompress}\n working_dir: gopath/src/github.com/evergreen-ci/evergreen/\n command: make get-mongodb\n - command: subprocess.exec\n type: setup\n params:\n background: true\n working_dir: gopath/src/github.com/evergreen-ci/evergreen/\n command: make start-mongod\n - command: subprocess.exec\n type: setup\n params:\n working_dir: gopath/src/github.com/evergreen-ci/evergreen\n command: make check-mongod\n - command: subprocess.exec\n type: setup\n params:\n working_dir: gopath/src/github.com/evergreen-ci/evergreen/\n command: make init-rs\n setup_docker:\n - command: shell.exec\n params:\n shell: bash\n script: |\n gopath/src/github.com/evergreen-ci/evergreen/scripts/setup-docker.sh\n setup-docker-host:\n - command: host.create\n type: setup\n params:\n distro: archlinux-parent\n provider: ec2\n retries: 3\n scope: build\n security_group_ids:\n - sg-097bff6dd0d1d31d0\n - command: host.list\n type: setup\n params:\n wait: true\n timeout_seconds: 900\n num_hosts: 1\n path: gopath/src/github.com/evergreen-ci/evergreen/spawned_hosts.json\n - command: subprocess.exec\n type: setup\n params:\n working_dir: gopath/src/github.com/evergreen-ci/evergreen\n command: make parse-host-file\n env:\n HOST_FILE: spawned_hosts.json\n GO_BIN_PATH: ${gobin}\n GOROOT: ${goroot}\n - command: expansions.update\n params:\n file: gopath/src/github.com/evergreen-ci/evergreen/bin/expansions.yml\n\n attach-test-results:\n - command: gotest.parse_files\n type: system\n params:\n files:\n - \"gopath/src/github.com/evergreen-ci/evergreen/bin/output.*\"\n - command: attach.xunit_results\n type: system\n params:\n files:\n - \"gopath/src/github.com/evergreen-ci/evergreen/bin/jstests/*.xml\"\n remove-test-results:\n - command: shell.exec\n type: system\n params:\n shell: bash\n script: |\n set -o xtrace\n rm gopath/src/github.com/evergreen-ci/evergreen/bin/output.*\n rm gopath/src/github.com/evergreen-ci/evergreen/bin/jstests/*.xml\n\n#######################################\n# Tasks #\n#######################################\n\ntasks:\n - name: coverage\n tags: [\"report\"]\n commands:\n - func: get-project\n - func: setup-credentials\n - func: setup-mongodb\n - func: run-make\n vars:\n target: \"coverage-html\"\n make_args: \"-k\"\n tz: \"America/New_York\"\n - <<: *run-smoke-test\n name: smoke-test-task\n tags: [\"smoke\"]\n - <<: *run-smoke-test\n name: smoke-test-endpoints\n tags: [\"smoke\"]\n - <<: *run-smoke-test-with-client-url\n name: smoke-test-agent-monitor\n tags: [\"smoke\"]\n - <<: *run-generate-lint\n\n - <<: *run-go-test-suite\n name: js-test\n - <<: *run-build\n name: dist\n - <<: *run-go-test-suite\n tags: [\"nodb\", \"test\"]\n name: test-auth\n - <<: *run-go-test-suite\n tags: [\"nodb\", \"test\", \"agent\"]\n name: test-thirdparty-docker\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-rest-route\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\", \"agent\"]\n name: test-rest-client\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-rest-model\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"test\", \"db\", \"agent\"]\n name: test-command\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"test\", \"db\"]\n name: test-units\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\", \"agent\"]\n name: test-agent\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-rest-data\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\", \"cli\"]\n name: test-operations\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-db\n - <<: *run-go-test-suite-with-docker\n tags: [\"db\", \"test\"]\n name: test-cloud\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-scheduler\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-service\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-monitor\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-evergreen\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\", \"agent\"]\n name: test-thirdparty\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-trigger\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"nodb\", \"test\", \"agent\"]\n name: test-util\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-validator\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-alertrecord\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-artifact\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-build\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-event\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-host\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-notification\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-patch\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-stats\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-task\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-testresult\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-user\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-distro\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-commitqueue\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-manifest\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-plugin\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-migrations\n - <<: *run-go-test-suite-with-mongodb\n tags: [\"db\", \"test\"]\n name: test-model-grid\n - <<: *run-go-test-suite-with-mongodb-useast\n tags: [\"db\", \"test\"]\n name: test-graphql\n - name: docker-cleanup\n commands:\n - func: get-project\n - func: setup-credentials\n - func: setup_docker\n - func: run-make\n vars:\n target: revendor\n - func: run-make\n vars: { target: \"test-thirdparty-docker\" }\n - name: test-repotracker\n tags: [\"db\", \"test\"]\n commands:\n - command: git.get_project\n type: setup\n params:\n directory: gopath/src/github.com/evergreen-ci/evergreen\n token: ${github_token}\n shallow_clone: false\n - func: setup-credentials\n - func: setup-mongodb\n - func: run-make\n vars:\n target: revendor\n - func: run-make\n vars: { target: \"test-repotracker\" }\n\nbuildvariants:\n - name: ubuntu1604\n display_name: Ubuntu 16.04\n run_on:\n - ubuntu1604-test\n - ubuntu1604-build\n expansions:\n disable_coverage: yes\n goos: linux\n goarch: amd64\n nodebin: /opt/node/bin\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-4.0.3.tgz\n tasks:\n - name: \"dist\"\n - name: \".smoke\"\n - name: \".test\"\n - name: \"js-test\"\n\n - name: ubuntu1604-docker\n display_name: Ubuntu 16.04 (Docker)\n run_on:\n - ubuntu1604-container\n expansions:\n goos: linux\n goarch: amd64\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.3.tgz\n test_timeout: 15m\n nodebin: /opt/node/bin\n is_docker: \"true\"\n tasks:\n - name: \"dist\"\n - name: \".smoke\"\n - name: \".test\"\n\n - name: race-detector\n display_name: Race Detector\n run_on:\n - archlinux-test\n - archlinux-build\n expansions:\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.3.tgz\n race_detector: true\n test_timeout: 15m\n tasks:\n - name: \".test\"\n\n - name: lint\n display_name: Lint\n run_on:\n - archlinux-test\n - archlinux-build\n expansions:\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n tasks:\n - name: generate-lint\n\n - name: coverage\n display_name: Coverage\n run_on:\n - archlinux-test\n - archlinux-build\n expansions:\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.3.tgz\n test_timeout: 15m\n tasks:\n - name: \".report\"\n stepback: false\n\n - name: osx\n display_name: OSX\n batchtime: 2880\n run_on:\n - macos-1014\n expansions:\n disable_coverage: yes\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.3.tgz\n tasks:\n - name: \"dist\"\n - name: \".test\"\n\n - name: windows\n display_name: Windows\n run_on:\n - windows-64-vs2015-small\n - windows-64-vs2015-test\n - windows-64-vs2015-small\n - windows-64-vs2015-large\n - windows-64-vs2015-compile\n - windows-64-vs2013-test\n - windows-64-vs2013-compile\n - windows-64-vs2010-test\n - windows-64-vs2010-compile\n - windows-64-vs2017-test\n - windows-64-vs2017-compile\n expansions:\n disable_coverage: yes\n gobin: /cygdrive/c/golang/go1.11/bin/go\n goroot: c:/golang/go1.11\n legacyGobin: /cygdrive/c/golang/go1.9/bin/go\n mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.3.zip\n extension: \".exe\"\n archiveExt: \".zip\"\n tasks:\n - name: \".agent .test\"\n - name: \".cli .test\"\n\n - name: rhel71-power8\n display_name: RHEL 7.1 POWER8\n batchtime: 2880\n run_on:\n - rhel71-power8-test\n expansions:\n disable_coverage: yes\n xc_build: yes\n goarch: ppc64le\n gobin: /opt/golang/go1.13/bin/go\n legacyGobin: /opt/golang/go1.9/bin/go\n goos: linux\n goroot: /opt/golang/go1.13\n mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-ppc64le-enterprise-rhel71-4.0.3.tgz\n tasks:\n - name: \".agent .test\"\n\n - name: rhel72-s390x\n display_name: RHEL 7.2 zLinux\n batchtime: 2880\n run_on:\n - rhel72-zseries-test\n expansions:\n xc_build: yes\n disable_coverage: yes\n goarch: s390x\n gobin: /opt/golang/go1.11/bin/go\n goroot: /opt/golang/go1.11\n legacyGobin: /opt/golang/go1.9/bin/go\n goos: linux\n # No official release of 4.0 for rhel72 zseries\n mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-s390x-enterprise-rhel72-3.6.4.tgz\n tasks:\n - name: \".agent .test\"\n\n - name: ubuntu1604-arm64\n display_name: Ubuntu 16.04 ARM\n batchtime: 2880\n run_on:\n - ubuntu1604-arm64-small\n expansions:\n disable_coverage: yes\n xc_build: yes\n goarch: arm64\n goos: linux\n gobin: /opt/golang/go1.13/bin/go\n goroot: /opt/golang/go1.13\n legacyGobin: /opt/golang/go1.9/bin/go\n mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-arm64-enterprise-ubuntu1604-4.0.3.tgz\n tasks:\n - name: \".agent .test\"\n - name: linux-docker\n display_name: ArchLinux (Docker)\n run_on:\n - archlinux-test\n expansions:\n goos: linux\n goarch: amd64\n tasks:\n - name: \"docker-cleanup\"\n", "alias": "__github", "github_patch_data": { "pr_number": 3186, "base_owner": "evergreen-ci", "base_repo": "evergreen", "base_branch": "master", "head_owner": "bsamek", "head_repo": "evergreen", "head_hash": "a7ecb8d2cbaf02ada80e94b70d5d53efe45d9ed6", "author": "bsamek", "author_uid": 624531, "merge_commit_sha": "" } }